<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-11-19T00:58:05.719Z</id>
    <title>osmos::feed</title>
    <updated>2023-11-19T00:58:05.719Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Launching the 2023 Nim Community Survey]]></title>
        <id>https://nim-lang.org//blog/2023/11/17/community-survey-2023.html</id>
        <link href="https://nim-lang.org//blog/2023/11/17/community-survey-2023.html"/>
        <updated>2023-11-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are proud to announce the launch of the official
2023 Nim Community Survey!
No matter whether you use Nim today, have used Nim previously, or never used Nim before;
we want to know your opinions.
Your feedback will help the Nim project understand its strengths and
weaknesses, and to determine development priorities for the future.
It shouldn’t take you much longer than 5 minutes to complete this survey.
Submissions will be accepted until the start of 2024, depending on the
response rates.
If you have any questions or feedback, please don’t hesitate
to get in touch with us via email at survey@nim-lang.org or on the
Nim Forum.
This is now the seventh year in which this survey has been running.
An analysis of the results for the past years can be found at the following links:
2016
2017
2018
2019
2020
2021
We would appreciate your help in spreading the word about this survey.
Share the Google Forms link on your social network feeds, with your colleagues
and in other communities.
Once the submission period ends, the results will be shown here and publicized
via the Nim Forum.
Thanks for your time!]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[IronBeetle]]></title>
        <id>https://matklad.github.io/2023/11/16/IronBeetle.html</id>
        <link href="https://matklad.github.io/2023/11/16/IronBeetle.html"/>
        <updated>2023-11-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hey, I am trying my hand at this Twitch thing and stream stuff about TigerBeetle at 17:00 UTC on
Thursdays. The format is unscripted, unedited stream&amp;talk, so this is not particularly information
dense, but it is fun (at least for me):]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Psyberg: Automated end to end catch up]]></title>
        <id>https://medium.com/p/260fbe366fe2</id>
        <link href="https://netflixtechblog.com/3-psyberg-automated-end-to-end-catch-up-260fbe366fe2?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-15T03:25:23.000Z</updated>
        <summary type="html"><![CDATA[By Abhinaya Shetty, Bharath Mummadisetty]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Diving Deeper into Psyberg: Stateless vs Stateful Data Processing]]></title>
        <id>https://medium.com/p/1d273b3aaefb</id>
        <link href="https://netflixtechblog.com/2-diving-deeper-into-psyberg-stateless-vs-stateful-data-processing-1d273b3aaefb?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-15T03:25:13.000Z</updated>
        <summary type="html"><![CDATA[By Abhinaya Shetty, Bharath Mummadisetty]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1. Streamlining Membership Data Engineering at Netflix with Psyberg]]></title>
        <id>https://medium.com/p/f68830617dd1</id>
        <link href="https://netflixtechblog.com/1-streamlining-membership-data-engineering-at-netflix-with-psyberg-f68830617dd1?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-15T03:24:49.000Z</updated>
        <summary type="html"><![CDATA[By Abhinaya Shetty, Bharath Mummadisetty]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Push Ifs Up And Fors Down]]></title>
        <id>https://matklad.github.io/2023/11/15/push-ifs-up-and-fors-down.html</id>
        <link href="https://matklad.github.io/2023/11/15/push-ifs-up-and-fors-down.html"/>
        <updated>2023-11-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A short note on two related rules of thumb.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Hμblog] Stop deploying web application firewalls]]></title>
        <id>https://www.devever.net/~hl/u/202311#14a</id>
        <link href="https://www.devever.net/~hl/u/202311#14a"/>
        <updated>2023-11-14T07:25:56.000Z</updated>
        <summary type="html"><![CDATA[<div type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul><li><a href="https://www.macchaffee.com/blog/2023/wafs/">Stop deploying web application firewalls</a></li></ul><p xmlns="http://www.w3.org/1999/xhtml">Excellent writeup by  about how web application firewalls are universally a terrible idea. I've been meaning to write an article on this subject for some time, but this is a good overview of many issues with them.<a href="https://www.macchaffee.com/">Mac Chaffee</a></p></div></div>]]></summary>
        <author>
            <name>devever.net/~hl</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detecting Speech and Music in Audio Content]]></title>
        <id>https://medium.com/p/afd64e6a5bf8</id>
        <link href="https://netflixtechblog.com/detecting-speech-and-music-in-audio-content-afd64e6a5bf8?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-14T01:55:45.000Z</updated>
        <summary type="html"><![CDATA[Iroro Orife, Chih-Wei Wu and Yun-Ning (Amy) Hung]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Science and Technology links (November 12 2023)]]></title>
        <id>https://lemire.me/blog/?p=20942</id>
        <link href="https://lemire.me/blog/2023/11/12/science-and-technology-links-november-12-2023/"/>
        <updated>2023-11-12T18:42:15.000Z</updated>
        <summary type="html"><![CDATA[Vitamin K2 supplements might reduce the risk of myocardial infarction (heart attacks) and of all-cause death (Hasific et al. 2022). You find vitamin K2 in some Gouda cheeses and in eggs. Most of the water on Earth is salinated (in the oceans) and cannot be consumed. Fresh water is often scarce. Yet Israel is desalinating … Continue reading Science and Technology links (November 12 2023)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Next Step in Personalization: Dynamic Sizzles]]></title>
        <id>https://medium.com/p/4dc4ce2011ef</id>
        <link href="https://netflixtechblog.com/the-next-step-in-personalization-dynamic-sizzles-4dc4ce2011ef?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-08T20:56:53.000Z</updated>
        <summary type="html"><![CDATA[Authors:Bruce Wobbe, Leticia Kwok]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generating arrays at compile-time in C++ with lambdas]]></title>
        <id>https://lemire.me/blog/?p=20933</id>
        <link href="https://lemire.me/blog/2023/11/07/generating-arrays-at-compile-time-in-c-with-lambdas/"/>
        <updated>2023-11-07T20:54:12.000Z</updated>
        <summary type="html"><![CDATA[Suppose that you want to check whether a character in C++ belongs to a fixed set, such as ‘\0’, ‘\x09’, ‘\x0a’,’\x0d’, ‘ ‘, ‘#’, ‘/’, ‘:’, ‘<‘, ‘>’, ‘?’, ‘@’, ‘[‘, ‘\\’, ‘]’, ‘^’, ‘|’. A simple way is to generate a 256-byte array of Boolean values and lookup the value. This approach is sometimes … Continue reading Generating arrays at compile-time in C++ with lambdas]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Oriented Blogging]]></title>
        <id>https://matklad.github.io/2023/11/07/dta-oriented-blogging.html</id>
        <link href="https://matklad.github.io/2023/11/07/dta-oriented-blogging.html"/>
        <updated>2023-11-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Wherein I describe the setup of this blog. The main take away from the post are not specific
technical tools, but the underlying principles and ideas, which I wish I had articulated earlier.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building In-Video Search]]></title>
        <id>https://medium.com/p/936766f0017c</id>
        <link href="https://netflixtechblog.com/building-in-video-search-936766f0017c?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-06T17:35:19.000Z</updated>
        <summary type="html"><![CDATA[Empowering video editors with multimodal machine learning to discover perfect moments across the entire Netflix catalog]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Streaming SQL in Data Mesh]]></title>
        <id>https://medium.com/p/0d83f5a00d08</id>
        <link href="https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08?source=rss----2615bd06b42e---4"/>
        <updated>2023-11-03T21:48:50.000Z</updated>
        <summary type="html"><![CDATA[Democratizing Stream Processing @ Netflix]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Computing] Expect-CT Lite: A humble proposal for minimal CT enforcement in TLS certificates]]></title>
        <id>https://www.devever.net/~hl/expect-ct-lite</id>
        <link href="https://www.devever.net/~hl/expect-ct-lite"/>
        <updated>2023-10-28T14:07:00.000Z</updated>
        <summary type="html"><![CDATA[<div type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p xmlns="http://www.w3.org/1999/xhtml">Last week we witnessed the , most likely by a Western nation-state. While it's  to any
attack which was carried out in this incident, one thing that has been brought
to my attention in the aftermath of this is that Certificate Transparency
logging remains optional for CAs.<a href="xmpp-incident">discovery of the compromise of an XMPP
service</a><a href="xmpp-incident-2#context-of-certificate-transparency">not
directly related</a></p></div></div>]]></summary>
        <author>
            <name>devever.net/~hl</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Computing] Mitigating the Hetzner/Linode XMPP.ru MitM interception incident, part 2: XMPP-specific mitigations]]></title>
        <id>https://www.devever.net/~hl/xmpp-incident-2</id>
        <link href="https://www.devever.net/~hl/xmpp-incident-2"/>
        <updated>2023-10-28T14:06:00.000Z</updated>
        <summary type="html"><![CDATA[<div type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p xmlns="http://www.w3.org/1999/xhtml">I've had a few comments in response to my previous article,  which have provided
XMPP-specific suggestions for how this could have been mitigated.<a href="https://www.devever.net/~hl/xmpp-incident">Mitigating the
Hetzner/Linode XMPP.ru MitM interception
incident</a></p></div></div>]]></summary>
        <author>
            <name>devever.net/~hl</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes And Kernel Panics]]></title>
        <id>https://medium.com/p/ed620b9c6225</id>
        <link href="https://netflixtechblog.com/kubernetes-and-kernel-panics-ed620b9c6225?source=rss----2615bd06b42e---4"/>
        <updated>2023-10-27T16:05:58.000Z</updated>
        <summary type="html"><![CDATA[How Netflix’s Container Platform Connects Linux Kernel Panics to Pods]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Appending to an std::string character-by-character: how does the capacity grow?]]></title>
        <id>https://lemire.me/blog/?p=20907</id>
        <link href="https://lemire.me/blog/2023/10/23/appending-to-an-stdstring-character-by-character-how-does-the-capacity-grow/"/>
        <updated>2023-10-23T13:33:37.000Z</updated>
        <summary type="html"><![CDATA[In C++, suppose that you append to a string one character at a time: while(my_string.size() <= 10'000'000) { my_string += "a"; } In theory, it might be possible for the C++ runtime library to implement this routine as the creation of a new string with each append: it could allocate a new memory region that … Continue reading Appending to an std::string character-by-character: how does the capacity grow?]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unified Versus Split Diff]]></title>
        <id>https://matklad.github.io/2023/10/23/unified-vs-split-diff.html</id>
        <link href="https://matklad.github.io/2023/10/23/unified-vs-split-diff.html"/>
        <updated>2023-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Which is better for code reviews, a unified diff or a split diff?]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Computing] Mitigating the Hetzner/Linode XMPP.ru MitM interception incident]]></title>
        <id>https://www.devever.net/~hl/xmpp-incident</id>
        <link href="https://www.devever.net/~hl/xmpp-incident"/>
        <updated>2023-10-20T20:30:00.000Z</updated>
        <summary type="html"><![CDATA[<div type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p xmlns="http://www.w3.org/1999/xhtml">(If you just want some recommendations for what to do, .)<a href="#recommendations">skip down to the Recommendations section below</a></p></div></div>]]></summary>
        <author>
            <name>devever.net/~hl</name>
        </author>
    </entry>
</feed>