<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2022-11-27T01:12:13.572Z</id>
    <title>osmos::feed</title>
    <updated>2022-11-27T01:12:13.572Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[[Pure C] Clang is better than GCC]]></title>
        <id>https://yurichev.org/clang/</id>
        <link href="https://yurichev.org/clang/"/>
        <updated>2022-11-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Pure C] Clang is better than GCC]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Version 1.6.10 released]]></title>
        <id>/blog/2022/11/23/version-1610-released.html</id>
        <link href="https://nim-lang.org/blog/2022/11/23/version-1610-released.html"/>
        <updated>2022-11-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Nim team is happy to announce version 1.6.10, our fifth patch release for
Nim 1.6.
Version 1.6.10 is a result of almost four months of hard work, and it contains
29 commits,
bringing some general improvements over 1.6.8.
This version brings OpenSSL 3 support
to Nim 1.6, and large allocations and deallocations for ARC/ORC are now
faster.
We would recommend to all of our users to upgrade and use version 1.6.10.
Installing Nim 1.6
New users
Check out if the package manager of your OS already ships version 1.6.10 or
install it as described here.
Existing users
If you have installed a previous version of Nim using choosenim,
getting Nim 1.6.10 is as easy as:
$ choosenim update stable

Alternatively, you can download Nim 1.6.10 from
our nightlies builds.
Donating to Nim
We would like to encourage you to donate to Nim.
The donated money will be used to further improve Nim by creating bounties
for the most important bugfixes and features.
You can donate via:
Open Collective
Patreon
BountySource
PayPal
Bitcoin: 1BXfuKM2uvoD6mbx4g5xM3eQhLzkCK77tJ
If you are a company, we also offer commercial support.
Bugfixes
These reported issues were fixed:
Fixed “–styleCheck:off does not work (and –styleCheck:hint is now the default?)”
(#20397)
Fixed “dereferencing pointer to incomplete type error with gcc 9.4 with statics/cast”
(#20141)
Fixed “strutils.find uses cstring optimization that stops after \0”
(#19500)
Fixed “Nimpretty mangles numeric literal procs”
(#20553)
Fixed “Regression in proc symbol resolution; Error: attempting to call routine “
(#18990)
Fixed “of operator doesn’t consider generics under orc/arc”
(#20391)
Fixed ““incompatible type” when mixing float32 and cfloat in generics”
(#19349)
Fixed “cannot generate code for: mSlice with toOpenArray”
(#19969)
Fixed “-mm flag is ignored on latest Nim 1.7.1 be4bd8”
(#20426)
The complete list of changes is available
here.]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Python] Wordclouds for your book library]]></title>
        <id>https://yurichev.org/wordcloud/</id>
        <link href="https://yurichev.org/wordcloud/"/>
        <updated>2022-11-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Python] Wordclouds for your book library]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[For your eyes only: improving Netflix video quality with neural networks]]></title>
        <id>https://medium.com/p/5b8d032da09c</id>
        <link href="https://netflixtechblog.com/for-your-eyes-only-improving-netflix-video-quality-with-neural-networks-5b8d032da09c?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-17T21:08:00.000Z</updated>
        <summary type="html"><![CDATA[by Christos G. Bampis, Li-Heng Chen and Zhi Li]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Match Cutting at Netflix: Finding Cuts with Smooth Visual Transitions]]></title>
        <id>https://medium.com/p/31c3fc14ae59</id>
        <link href="https://netflixtechblog.com/match-cutting-at-netflix-finding-cuts-with-smooth-visual-transitions-31c3fc14ae59?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-17T16:37:01.000Z</updated>
        <summary type="html"><![CDATA[What’s needed in the art of match cutting is tools to help editors find shots that match well together, which is what we’ve started…]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NYC]]></title>
        <id>https://thenumbat.github.io/NYC-I/</id>
        <link href="https://thenumbat.github.io/NYC-I/"/>
        <updated>2022-11-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[New York, NY, 2022]]></summary>
        <author>
            <name>Max Slater</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cut for time]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-8</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-8"/>
        <updated>2022-11-15T19:30:08.000Z</updated>
        <summary type="html"><![CDATA[<p>This series has to end <em>somewhere</em>, so let's end it here!</p>
<p>However, here is a list of some things I'd like to come back to:</p>

                        <h2>
                            <a id="bundling-typescript" class="anchor" href="#bundling-typescript">
                                Bundling & TypeScript
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async fn in trait, for real this time]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-7</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-7"/>
        <updated>2022-11-15T19:30:07.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="async-trait-s-one-weird-type-ascription-trick" class="anchor" href="#async-trait-s-one-weird-type-ascription-trick">
                                <code>async_trait</code>'s one weird type ascription trick
                            </a>
                        </h2>
                        
<p>Now that I got <a href="part-6">the Log in with GitHub feature</a> working, let's explore
what this would've looked like with the <code>async_trait</code> crate.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing "Log in with GitHub"]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-6</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-6"/>
        <updated>2022-11-15T19:30:06.000Z</updated>
        <summary type="html"><![CDATA[<p>Because I started accepting donations via <a href="/donate">GitHub Sponsors</a>, and
because donating at the &quot;Silver&quot; tier or above gives you advance access to
articles <em>and</em> your name in the credits, I need to interface with the GitHub
API the same way I do the Patreon API.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Trying to use nix]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-5</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-5"/>
        <updated>2022-11-15T19:30:05.000Z</updated>
        <summary type="html"><![CDATA[<p>Now that my website is <a href="part-4">deployed as a container image</a>, I wanted to give 
<a href="https://nixos.org/">nix</a> a try. I'm still doing it the old-fashioned way right
now: with a <code>Dockerfile</code>, running <code>cargo</code> in a &quot;builder&quot; image, copying stuff
out of there into a slimmer image (that still has an Ubuntu base, even though
<a href="https://github.com/GoogleContainerTools/distroless">distroless images</a> are a
thing now).</p>

                        <h2>
                            <a id="but-why" class="anchor" href="#but-why">
                                But why?
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying at the edge]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-4</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-4"/>
        <updated>2022-11-15T19:30:04.000Z</updated>
        <summary type="html"><![CDATA[<div class="disclosure">
	<strong>Disclosure</strong>: 
Although I no longer work for the company my website is hosted on, and this
article is written in way that mentions neither my previous or current hosting
provider: at the time of this writing, I don't pay for hosting.
</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Async fn in trait... not]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-3</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-3"/>
        <updated>2022-11-15T19:30:03.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="async-fn-in-trait-not" class="anchor" href="#async-fn-in-trait-not">
                                Async fn in trait... not
                            </a>
                        </h2>
                        
<p>I was planning on showing the in-progress <code>async_fn_in_trait</code> feature in the
context of my website, but it turns out, I can't!</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating from warp to axum]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-2</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-2"/>
        <updated>2022-11-15T19:30:02.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="falling-out-of-love-with-warp" class="anchor" href="#falling-out-of-love-with-warp">
                                Falling out of love with <code>warp</code>
                            </a>
                        </h2>
                        
<p>Back when I wrote this codebase, <a href="https://lib.rs/crates/warp">warp</a> was the best
/ only alternative for something relatively high-level on top of
<a href="https://lib.rs/crates/hyper">hyper</a>.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cleaning up and upgrading third-party crates]]></title>
        <id>https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-1</id>
        <link href="https://fasterthanli.me/series/updating-fasterthanli-me-for-2022/part-1"/>
        <updated>2022-11-15T19:30:01.000Z</updated>
        <summary type="html"><![CDATA[<h2>
                            <a id="the-bleeding-edge-of-rustc-and-clippy" class="anchor" href="#the-bleeding-edge-of-rustc-and-clippy">
                                The bleeding edge of rustc and clippy
                            </a>
                        </h2>
                        
<p>Typically, you'd want a production application to use a stable version of Rust.
At the time of this writing, that's Rust 1.65.0, which stabilizes a bunch of
long-awaited features (GATs, let-else, MIR inlining, split debug info, etc.).</p>
<div class="tip">
<div class="tip-header">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M21.41 41.398c.148-1.787.337-3.572.574-5.351.369-2.772 4.393-11.308 5.624-12.882l.553-.706-1.344-.449a5.772 5.772 0 0 1-3.948-5.478 5.786 5.786 0 0 1 5.779-5.78 5.768 5.768 0 0 1 5.684 4.758l.249 1.396 1.231-.704a28.845 28.845 0 0 1 14.282-3.801c4.991 0 9.93 1.314 14.282 3.801l1.231.704.249-1.396a5.766 5.766 0 0 1 5.683-4.758 5.786 5.786 0 0 1 5.779 5.78 5.772 5.772 0 0 1-3.948 5.478l-1.344.449.552.705c1.911 2.44 2.55 2.541 3.563 5.599 1.422 4.293 2.923 7.964 2.923 12.61v49.875h2V41.373c0-6.519-2.008-12.717-5.819-18.005a7.768 7.768 0 0 0 4.072-6.836c0-4.29-3.49-7.78-7.779-7.78a7.766 7.766 0 0 0-7.3 5.1 30.834 30.834 0 0 0-14.146-3.45 30.834 30.834 0 0 0-14.146 3.45 7.766 7.766 0 0 0-7.301-5.1c-4.289 0-7.779 3.49-7.779 7.78a7.766 7.766 0 0 0 4.072 6.836c-6.681 9.271-5.976 21.037-5.992 32.034-.017 11.946.656 23.895.109 35.838l2.006-.001c.67 0-.17-33.831-.156-36.912.022-4.312.148-8.631.505-12.929z"/><path d="M73.854 31.271v-4.494c0-.971-.79-1.76-1.761-1.76H55.235c-.604 0-1.3.869-1.778 1.905-.015 0-.027-.008-.042-.008H46.789c-.02 0-.037.011-.057.011-.478-1.037-1.175-1.908-1.779-1.908H28.094c-.971 0-1.761.79-1.761 1.76v4.494c0 4.477 3.643 8.119 8.119 8.119h5.12c4.265 0 7.734-3.47 7.734-7.734v-2.091H52.878v2.091c0 4.265 3.47 7.734 7.734 7.734h5.121c4.479-.001 8.121-3.643 8.121-8.119zm-41.713 3.192a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm11.163-2.18l-5.75 3.597a.95.95 0 0 1-1.313-.302.952.952 0 0 1 .303-1.312l5.75-3.597a.953.953 0 0 1 1.01 1.614zm15.168 1.935a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm4.909 1.561a.953.953 0 0 1-.506-1.759l5.75-3.597a.952.952 0 1 1 1.01 1.614l-5.75 3.597a.942.942 0 0 1-.504.145z"/><path d="M59.705 45.232h-2c0 1.823-1.483 3.306-3.306 3.306s-3.306-1.483-3.306-3.306v-1.439h1.06a3.294 3.294 0 0 0 3.285-3.285v-.17c0-.259-.038-.508-.095-.749a3.291 3.291 0 0 0-2.665-2.482 3.243 3.243 0 0 0-.525-.053h-4.12c-.18 0-.353.025-.525.053a3.291 3.291 0 0 0-2.665 2.482 3.255 3.255 0 0 0-.095.749v.17a3.294 3.294 0 0 0 3.285 3.285h1.06v1.439a3.31 3.31 0 0 1-3.307 3.306 3.31 3.31 0 0 1-3.306-3.306h-2a5.312 5.312 0 0 0 5.306 5.306 5.293 5.293 0 0 0 4.306-2.229 5.294 5.294 0 0 0 4.306 2.229 5.313 5.313 0 0 0 5.307-5.306zM29.742 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM43.779 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM57.816 58.336a.703.703 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM71.853 58.336a.704.704 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM35.354 71.559v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-1.406 0zM49.39 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM63.427 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM29.038 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-.703-.703zM43.076 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.705.705 0 0 0-.703-.703zM57.113 81.364a.704.704 0 0 0-.704.703v5.369a.704.704 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.703-.703zM71.149 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.704-.703z"/></svg>
Cool bear's hot tip
</div>

</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Helping VFX studios pave a path to the cloud]]></title>
        <id>https://medium.com/p/d308ee43c079</id>
        <link href="https://netflixtechblog.com/helping-vfx-studios-pave-a-path-to-the-cloud-d308ee43c079?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-15T17:03:55.000Z</updated>
        <summary type="html"><![CDATA[By: Peter Cioni (Netflix), Alex Schworer (Netflix), Mac Moore (Conductor Tech.), Rachel Kelley (AWS), Ranjit Raju (AWS)]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Unix] Logging your work using suckless dwm]]></title>
        <id>https://yurichev.org/dwm/</id>
        <link href="https://yurichev.org/dwm/"/>
        <updated>2022-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Unix] Logging your work using suckless dwm]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Math][RevEng] Boolean algebra for noobs: stack alignment]]></title>
        <id>https://yurichev.org/bool2/</id>
        <link href="https://yurichev.org/bool2/"/>
        <updated>2022-11-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Math][RevEng] Boolean algebra for noobs: stack alignment]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yet another self-referential joke about loser]]></title>
        <id>https://yurichev.org/selfref/</id>
        <link href="https://yurichev.org/selfref/"/>
        <updated>2022-11-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Yet another self-referential joke about loser]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[New Series: Creating Media with Machine Learning]]></title>
        <id>https://medium.com/p/5067ac110bcd</id>
        <link href="https://netflixtechblog.com/new-series-creating-media-with-machine-learning-5067ac110bcd?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-11T17:26:39.000Z</updated>
        <summary type="html"><![CDATA[This blog series will be showing you how we use the power of machine learning to create stunning media at a global scale.]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Machine Learning for Fraud Detection in Streaming Services]]></title>
        <id>https://medium.com/p/b0b4ef3be3f6</id>
        <link href="https://netflixtechblog.com/machine-learning-for-fraud-detection-in-streaming-services-b0b4ef3be3f6?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-11T17:26:15.000Z</updated>
        <summary type="html"><![CDATA[By Soheil Esmaeilzadeh, Negin Salajegheh, Amir Ziai, Jeff Boote]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A cost model for Nim]]></title>
        <id>/blog/2022/11/11/a-cost-model-for-nim.html</id>
        <link href="https://nim-lang.org/blog/2022/11/11/a-cost-model-for-nim.html"/>
        <updated>2022-11-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A cost model for Nim
It is impossible to design a system so perfect that no one needs to be
good.
— T. S. Eliot
This blog post is the beginning of a cost model for the implementation
that is available via “Nim devel” aka Nim version 2.
This implementation was designed for embedded, hard real-time
systems. Generally speaking, assuming you have enough RAM (which is
about 64 kB) all of Nim’s language features are supported –
including exception handling and heap-based storage. The implementation
of these features also works on bare metal, without an operating system.
Heap-based storage
Why the focus on embedded, hard real-time systems? Because when you do
these well you can also do everything else well! The algorithms used are
oblivious to the heap size: Nim’s memory management works well wit…]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Seeing through hardware counters: a journey to threefold performance increase]]></title>
        <id>https://medium.com/p/2721924a2822</id>
        <link href="https://netflixtechblog.com/seeing-through-hardware-counters-a-journey-to-threefold-performance-increase-2721924a2822?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-09T23:47:03.000Z</updated>
        <summary type="html"><![CDATA[By Vadim Filanovsky and Harshad Sane]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Math] Boolean algebra for noobs: easy exercise]]></title>
        <id>https://yurichev.org/bool/</id>
        <link href="https://yurichev.org/bool/"/>
        <updated>2022-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Math] Boolean algebra for noobs: easy exercise]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn reverse engineering: but where to start?]]></title>
        <id>https://yurichev.org/RE_start/</id>
        <link href="https://yurichev.org/RE_start/"/>
        <updated>2022-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn reverse engineering: but where to start?]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CPU vs (GP)GPU: the difference]]></title>
        <id>https://yurichev.org/GPU/</id>
        <link href="https://yurichev.org/GPU/"/>
        <updated>2022-11-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[CPU vs (GP)GPU: the difference]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Becoming fasterthanlime full-time]]></title>
        <id>https://fasterthanli.me/articles/becoming-fasterthanlime-full-time</id>
        <link href="https://fasterthanli.me/articles/becoming-fasterthanlime-full-time"/>
        <updated>2022-11-04T06:40:00.000Z</updated>
        <summary type="html"><![CDATA[<p>As of today, I am no longer employed by <a href="https://fly.io">fly.io</a>.</p>
<p>We're both very sad, and we've promised to stay friends and send postcards to
each other over winter break. (I'm excited, too —
<a href="https://dribbble.com/shots/15304391-Home-for-Fly-io">Annie</a> makes great
postcards)</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Consistent caching mechanism in Titus Gateway]]></title>
        <id>https://medium.com/p/6cb89b9ce296</id>
        <link href="https://netflixtechblog.com/consistent-caching-mechanism-in-titus-gateway-6cb89b9ce296?source=rss----2615bd06b42e---4"/>
        <updated>2022-11-03T19:19:31.000Z</updated>
        <summary type="html"><![CDATA[by Tomasz Bak and Fabio Kung]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Month with Nim: October 2022]]></title>
        <id>/blog/2022/11/01/this-month-with-nim.html</id>
        <link href="https://nim-lang.org/blog/2022/11/01/this-month-with-nim.html"/>
        <updated>2022-11-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Public Analytics for Nim
Author: pietroppeter
This month (October 2022) has been the first month where Nim website analytics have been available publicly
for everyone to consult, here is a snapshot of the dashboard on October 31st:
Can you spot the day of NimConf? 😜
By Public Analytics I mean that anyone has access to the dashboard.
Indeed, you can explore the data yourself: https://plausible.io/nim-lang.org.
Can you guess what are the top three sources of traffic for the month?
How many views did last edition of “This month with Nim” had?
Is your country in the top ten list of visitors? How many Nim visitors from your city?
More mobile or more desktop visitors? What if you filter for a specific blogpost?
The analytics in the dashboard are provided by plausible analytics,
which is an anal…]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
</feed>