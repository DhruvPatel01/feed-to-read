<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-09-10T00:53:26.858Z</id>
    <title>osmos::feed</title>
    <updated>2023-09-10T00:53:26.858Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Locating ‘identifiers’ quickly (ARM NEON edition)]]></title>
        <id>https://lemire.me/blog/?p=20798</id>
        <link href="https://lemire.me/blog/2023/09/04/locating-identifiers-quickly-arm-neon-edition/"/>
        <updated>2023-09-04T00:46:18.000Z</updated>
        <summary type="html"><![CDATA[A common problem in parsing is that you want to find all identifiers (e.g., variable names, function names) in a document quickly. There are typically some fixed rules. For example, it is common to allow ASCII letters and digits as well as characters like ‘_’ in the identifier, but to forbid some characters at the … Continue reading Locating ‘identifiers’ quickly (ARM NEON edition)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Science and Technology links (September 2 2023)]]></title>
        <id>https://lemire.me/blog/?p=20790</id>
        <link href="https://lemire.me/blog/2023/09/02/science-and-technology-links-september-2-2023/"/>
        <updated>2023-09-02T18:30:10.000Z</updated>
        <summary type="html"><![CDATA[Physicists have a published a paper with 5154 authors. The list of authors takes 24 pages out of the 33 pages. The lesson is that if someone tell you that they have published an important paper, you should ask how many authors there were and what their exact role was. Vegatarians are at higher risk … Continue reading Science and Technology links (September 2 2023)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Month with Nim: July and August 2023]]></title>
        <id>https://nim-lang.org//blog/2023/09/01/this-month-with-nim.html</id>
        <link href="https://nim-lang.org//blog/2023/09/01/this-month-with-nim.html"/>
        <updated>2023-09-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[HappyX
Author: ethosa
HappyX is a macro-oriented full-stack web framework that combines frontend and backend features.
With HappyX you can write single page applications (SPA),
static site generation (SSG),
and server side rendering (SSR) web applications.
It provides the same syntax for all of these solutions:
import happyx

serve("127.0.0.1", 5000):
  "/":
    "Hello, world!"

or:
import happyx

appRoutes("app"):
  "/":
    "Hello, world!"

Included is a command line interface hpx.
This enables easy creation of projects for Nim and Python.
A non exhaustive list of features is as follows:
Multiple server options (built-in asynchttpserver, microasynchttpserver, httpbeast and httpx)
Hot code reloading (now only for SPA)
Debug logging with -d:debug
Powerful routing that includes path params …]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zero Configuration Service Mesh with On-Demand Cluster Discovery]]></title>
        <id>https://medium.com/p/ac6483b52a51</id>
        <link href="https://netflixtechblog.com/zero-configuration-service-mesh-with-on-demand-cluster-discovery-ac6483b52a51?source=rss----2615bd06b42e---4"/>
        <updated>2023-08-29T23:08:45.000Z</updated>
        <summary type="html"><![CDATA[Netflix’s service mesh adoption: history, motivations, and how we worked with the Envoy community on a feature to streamline mesh adoption]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to link identical function names from different DLLs]]></title>
        <id>https://nullprogram.com/blog/2023/08/27/</id>
        <link href="https://nullprogram.com/blog/2023/08/27/"/>
        <updated>2023-08-27T01:46:31.000Z</updated>
        <summary type="html"><![CDATA[For the typical DLL function call you declare the function prototype (via
header file), you inform the link editor (ld, link) that the DLL
exports a symbol with that name (import library), it matches the declared
name with this export, and it becomes an import in your program’s import
table. What happens when two different DLLs export the same symbol? The
link editor will pick the first found. But what if you want to use both
exports? If they have the same name, how could program or link editor
distinguish them? In this article I’ll demonstrate a technique to resolve
this by creating a program which links with and directly uses two
different C runtimes (CRTs) simultaneously.
In PE executable images, an import isn’t just a symbol, but a tuple
of DLL name and symbol. For human display, a tup…]]></summary>
        <author>
            <name>null program</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Everything you never wanted to know about Win32 environment blocks]]></title>
        <id>https://nullprogram.com/blog/2023/08/23/</id>
        <link href="https://nullprogram.com/blog/2023/08/23/"/>
        <updated>2023-08-23T21:51:10.000Z</updated>
        <summary type="html"><![CDATA[In an effort to avoid programming by superstition, I did a deep dive
into the Win32 “environment block,” the data structure holding a process’s
environment variables, in order to better understand it. Along the way I
discovered implied and undocumented behaviors. (The environment block
must not to be confused with the Process Environment Block (PEB)
which is different.) Because I cannot possibly retain all the quirky
details in my head for long, I’m writing them down for future reference. I
ran my tests on different Windows versions as far back as Windows XP SP3
in order to fill in gaps where documentation is ambiguous, incomplete, or
wrong. Overall conclusion: Correct, direct manipulation of an environment
block is impossible in the general case due to under-specified and
incorrect docume…]]></summary>
        <author>
            <name>null program</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Transcoding Latin 1 strings to UTF-8 strings at 18 GB/s using AVX-512]]></title>
        <id>https://lemire.me/blog/?p=20758</id>
        <link href="https://lemire.me/blog/2023/08/18/transcoding-latin-1-strings-to-utf-8-strings-at-12-gb-s-using-avx-512/"/>
        <updated>2023-08-18T18:17:42.000Z</updated>
        <summary type="html"><![CDATA[Though most strings online today follow the Unicode standard (e.g., using UTF-8), the Latin 1 standard is still in widespread inside some systems (such as browsers) as JavaScript strings are often stored as either Latin 1, UTF-8 or UTF-16 internally. Latin 1 captures the first 256 characters from the Unicode standard and represents them as … Continue reading Transcoding Latin 1 strings to UTF-8 strings at 18 GB/s using AVX-512]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AVA Discovery View: Surfacing Authentic Moments]]></title>
        <id>https://medium.com/p/b8cd145491cc</id>
        <link href="https://netflixtechblog.com/ava-discovery-view-surfacing-authentic-moments-b8cd145491cc?source=rss----2615bd06b42e---4"/>
        <updated>2023-08-17T22:07:14.000Z</updated>
        <summary type="html"><![CDATA[By: Hamid Shahid, Laura Johnson, Tiffany Low]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript is Surprisingly OK for Compilers]]></title>
        <id>https://matklad.github.io/2023/08/17/typescript-is-surprisingly-ok-for-compilers.html</id>
        <link href="https://matklad.github.io/2023/08/17/typescript-is-surprisingly-ok-for-compilers.html"/>
        <updated>2023-08-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[There are two main historical trends when choosing an implementation language for something
compiler-shaped.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Curbing Connection Churn in Zuul]]></title>
        <id>https://medium.com/p/2feb273a3598</id>
        <link href="https://netflixtechblog.com/curbing-connection-churn-in-zuul-2feb273a3598?source=rss----2615bd06b42e---4"/>
        <updated>2023-08-16T17:55:48.000Z</updated>
        <summary type="html"><![CDATA[Netflix’s Zuul Gateway eliminated tens of millions of connections and reduced almost all connection churn to backends]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How accurate is the birthday’s paradox formula?]]></title>
        <id>https://lemire.me/blog/?p=20745</id>
        <link href="https://lemire.me/blog/2023/08/15/how-accurate-is-the-birthdays-paradox-formula/"/>
        <updated>2023-08-15T17:28:53.000Z</updated>
        <summary type="html"><![CDATA[Given a set of r random values from a large set (of size N), I have been using the formula 1-exp(-r**2/(2N)) to approximate the probability of a collision. It assumes that r is much smaller than N. The formula suggests that if you have hundreds of millions of random 64-bit numbers, you will start getting … Continue reading How accurate is the birthday’s paradox formula?]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NYC: Botanical Garden]]></title>
        <id>https://thenumb.at/NYBG/</id>
        <link href="https://thenumb.at/NYBG/"/>
        <updated>2023-08-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[New York Botanical Garden, New York, NY, 2023]]></summary>
        <author>
            <name>Max Slater</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Role Of Algorithms]]></title>
        <id>https://matklad.github.io/2023/08/13/role-of-algorithms.html</id>
        <link href="https://matklad.github.io/2023/08/13/role-of-algorithms.html"/>
        <updated>2023-08-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is lobste.rs comment as an article, so expect even more abysmal editing than usual.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Transcoding UTF-8 strings to Latin 1 strings at 18 GB/s using AVX-512]]></title>
        <id>https://lemire.me/blog/?p=20738</id>
        <link href="https://lemire.me/blog/2023/08/12/transcoding-utf-8-strings-to-latin-1-strings-at-12-gb-s-using-avx-512/"/>
        <updated>2023-08-12T01:18:50.000Z</updated>
        <summary type="html"><![CDATA[Most strings online are Unicode strings in the UTF-8 format. Other systems (e.g., Java, Microsoft) might prefer UTF-16. However, Latin 1 is still a common encoding (e.g., within JavaScript runtimes). Its relationship with Unicode is simple: Latin 1 includes the first 256 Unicode characters. It is rich enough to convert most of the standard European … Continue reading Transcoding UTF-8 strings to Latin 1 strings at 18 GB/s using AVX-512]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
</feed>