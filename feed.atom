<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-12-31T00:58:00.028Z</id>
    <title>osmos::feed</title>
    <updated>2023-12-31T00:58:00.028Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Science and Technology links (December 30th 2023)]]></title>
        <id>https://lemire.me/blog/?p=21051</id>
        <link href="https://lemire.me/blog/2023/12/30/science-and-technology-links-december-30th-2023/"/>
        <updated>2023-12-30T20:18:07.000Z</updated>
        <summary type="html"><![CDATA[Parenting does not appear to be able to determine the personality traits of a child. When the last ice age ended, 12,000 years ago, the Sahara was green and full of life. It turned into a desert about 5,500 years ago. Fadnes et al. claim that the UK population could live 10 years older if … Continue reading Science and Technology links (December 30th 2023)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CI Dream]]></title>
        <id>https://matklad.github.io/2023/12/24/ci-dream.html</id>
        <link href="https://matklad.github.io/2023/12/24/ci-dream.html"/>
        <updated>2023-12-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is more of an android dream (that one with a unicorn) than a coherent post, but please indulge me.
It's a short one at least!]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Retry Loop]]></title>
        <id>https://matklad.github.io/2023/12/21/retry-loop.html</id>
        <link href="https://matklad.github.io/2023/12/21/retry-loop.html"/>
        <updated>2023-12-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A post about writing a retry loop. Not a smart post about avoiding thundering heards and resonance.
A simpleton kind of post about wrangling ifs and fors together to minimize bugs.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Versions 2.0.2 and 1.6.18 released]]></title>
        <id>https://nim-lang.org//blog/2023/12/19/versions-1618-202-released.html</id>
        <link href="https://nim-lang.org//blog/2023/12/19/versions-1618-202-released.html"/>
        <updated>2023-12-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Nim team is happy to announce two releases:
the latest Nim, version 2.0.2
LTS release, version 1.6.18
For the majority of our users, v2.0.2 contains 63 commits and brings bugfixes and improvements to Nim 2.0.0, released four months ago.
NOTE: If your program uses threads (--threads:on became the default in the 2.0.x line) please also use the -d:useMalloc switch.
This problem will be fixed in 2.0.4, sorry for the inconvenience.
For those users who haven’t switched to Nim v2.0 yet, we have released the ninth patch release for Nim 1.6.x.
It is a small release with 13 commits.
Nim Community Survey 2023
Before going into details of the release, we would like to remind you that 2023 Nim Community Survey is still open, and we would appreciate your input if you haven’t done it already.
Install…]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[So you want custom allocator support in your C library]]></title>
        <id>https://nullprogram.com/blog/2023/12/17/</id>
        <link href="https://nullprogram.com/blog/2023/12/17/"/>
        <updated>2023-12-17T17:52:26.000Z</updated>
        <summary type="html"><![CDATA[This article was discussed on Hacker News and on reddit.
Users of mature C libraries conventionally get to choose how memory is
allocated — that is, when it cannot be avoided entirely. The C
standard never laid down a convention — perhaps for the better —
so each library re-invents an allocator interface. Not all are created
equal, and most repeat a few fundamental mistakes. Often the interface is
merely a token effort, to check off that it’s “supported” without actual
consideration to its use. This article describes the critical features of
a practical allocator interface, and demonstrates why they’re important.
Before diving into the details, here’s the checklist for library authors:
All allocation functions accept a user-defined context pointer.
The “free” function accepts the original …]]></summary>
        <author>
            <name>null program</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Our First Netflix Data Engineering Summit]]></title>
        <id>https://medium.com/p/f326b0589102</id>
        <link href="https://netflixtechblog.com/our-first-netflix-data-engineering-summit-f326b0589102?source=rss----2615bd06b42e---4"/>
        <updated>2023-12-14T16:54:11.000Z</updated>
        <summary type="html"><![CDATA[Holden Karau Elizabeth Stone Pedro Duarte Chris Stephens Pallavi Phadnis Lee Woodridge Mark Cho Guil Pires Sujay Jain Tristan Reid…]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Hμblog] Libreboot 10-year anniversary]]></title>
        <id>https://www.devever.net/~hl/u/202312#13a</id>
        <link href="https://www.devever.net/~hl/u/202312#13a"/>
        <updated>2023-12-13T08:11:05.000Z</updated>
        <summary type="html"><![CDATA[<div type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><ul><li><a href="https://libreboot.org/news/10.html">Libreboot 10-year anniversary</a></li></ul><p xmlns="http://www.w3.org/1999/xhtml">Leah Rowe has written an interesting article about the history of the Libreboot project on the project's 10th anniversary. Recommended reading if you're interested in the open source firmware ecosystem.</p></div></div>]]></summary>
        <author>
            <name>devever.net/~hl</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Measuring the size of the cache line empirically]]></title>
        <id>https://lemire.me/blog/?p=21030</id>
        <link href="https://lemire.me/blog/2023/12/12/measuring-the-size-of-the-cache-line-empirically/"/>
        <updated>2023-12-12T18:17:36.000Z</updated>
        <summary type="html"><![CDATA[Our computers do not read or write memory in units of bits or even bytes. Rather memory is accessed in small blocks of memory called “cache lines”. For a given system, the cache line size is usually fixed and small (e.g.,  16 to 256 bytes). All Intel/AMD x64 systems I have used relied on a … Continue reading Measuring the size of the cache line empirically]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Non-Send Futures When?]]></title>
        <id>https://matklad.github.io/2023/12/10/nsfw.html</id>
        <link href="https://matklad.github.io/2023/12/10/nsfw.html"/>
        <updated>2023-12-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Ever since reading
What If We Pretended That a Task = Thread?
I can't stop thinking about borrowing non-Sync data across .await.
In this post, I'd love to take one more look at the problem.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fast Buffer-to-String conversion in JavaScript with a Lookup Table]]></title>
        <id>https://lemire.me/blog/?p=21020</id>
        <link href="https://lemire.me/blog/2023/12/08/fast-buffer-to-string-conversion-in-javascript-with-a-lookup-table/"/>
        <updated>2023-12-08T05:40:28.000Z</updated>
        <summary type="html"><![CDATA[When programming in a JavaScript environment such as Node.js, you might recover raw data from the network and need to convert the bytes into strings. In a system such as Node.js, you may represent such raw bytes using a Buffer instance. You can conveniently convert a Buffer instance into a JavaScript (mybuffer.toString()). But, maybe surprisingly, … Continue reading Fast Buffer-to-String conversion in JavaScript with a Lookup Table]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mastering Nim contest winners]]></title>
        <id>https://nim-lang.org//blog/2023/12/07/contest-winners.html</id>
        <link href="https://nim-lang.org//blog/2023/12/07/contest-winners.html"/>
        <updated>2023-12-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The contest is over!
A gold crown can be seen by turning the picture upside down:
We received lots of correct answers!
Among those who answered correctly, three lucky winners were chosen by random draw.
An email has been sent to the lucky winners and we hope they reply in time with their postal addresses so that they can receive their signed books before Christmas eve. 
Due to privacy concerns we will not publish any information about the winners.
If they want, they can share the information on our forum.
We thank everybody who has participated and wish you a happy Santa Claus!]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How fast can you validate UTF-8 strings in JavaScript?]]></title>
        <id>https://lemire.me/blog/?p=21010</id>
        <link href="https://lemire.me/blog/2023/12/05/how-fast-can-you-validate-utf-8-strings-in-javascript/"/>
        <updated>2023-12-05T22:23:52.000Z</updated>
        <summary type="html"><![CDATA[When you recover textual content from the disk or from the network, you may expect it to be a Unicode string in UTF-8. It is the most common format. Unfortunately, not all sequences of bytes are valid UTF-8 and accepting invalid UTF-8 without validating it is a security risk. How might you validate a UTF-8 … Continue reading How fast can you validate UTF-8 strings in JavaScript?]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NPS, the good parts]]></title>
        <id>https://apenwarr.ca/log/20231204</id>
        <link href="https://apenwarr.ca/log/20231204"/>
        <updated>2023-12-05T05:01:12.000Z</updated>
        <summary type="html"><![CDATA[The Net Promoter Score (NPS) is a statistically questionable way to turn a
set of 10-point ratings into a single number you can compare with other
NPSes. That's not the good part.
Humans
To understand the good parts, first we have to start with humans. Humans
have emotions, and those emotions are what they mostly use when asked to
rate things on a 10-point scale.
Almost exactly twenty years ago, I wrote about sitting on a plane next to a
musician who told me about music album reviews. The worst
rating an artist can receive, he said, is a lukewarm one. If people think
your music is neutral, it means you didn't make them feel anything at all.
You failed. Someone might buy music that reviewers hate, or buy music that
people love, but they aren't really that interested in music that is just
ki…]]></summary>
        <author>
            <name>apenwarr</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Computing] I'll be speaking at 37C3 (and have some spare tickets)]]></title>
        <id>https://www.devever.net/~hl/37c3-announce</id>
        <link href="https://www.devever.net/~hl/37c3-announce"/>
        <updated>2023-12-03T13:29:00.000Z</updated>
        <summary type="html"><![CDATA[<div type="xhtml"><div xmlns="http://www.w3.org/1999/xhtml"><p xmlns="http://www.w3.org/1999/xhtml">The 37th Chaos Communications Congress (CCC), taking place in Hamburg on the
27th through 30th December 2023 inclusive, has accepted my talk submission,
“Adventures in Reverse Engineering Broadcom NIC Firmware”, so I'll be giving a
talk there this Christmas. This will follow on from my  by
the same name while also covering new ground.<a href="ortega">blog post</a></p></div></div>]]></summary>
        <author>
            <name>devever.net/~hl</name>
        </author>
    </entry>
</feed>