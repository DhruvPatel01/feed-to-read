<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-03-19T01:09:30.558Z</id>
    <title>osmos::feed</title>
    <updated>2023-03-19T01:09:30.558Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[A minute of narcissism: what ChatGPT knows about Dennis Yurichev?]]></title>
        <id>https://yurichev.org/chatgpt/</id>
        <link href="https://yurichev.org/chatgpt/"/>
        <updated>2023-03-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A minute of narcissism: what ChatGPT knows about Dennis Yurichev?]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Media Understanding Platform for ML Innovations]]></title>
        <id>https://medium.com/p/9bef9962dcb7</id>
        <link href="https://netflixtechblog.com/building-a-media-understanding-platform-for-ml-innovations-9bef9962dcb7?source=rss----2615bd06b42e---4"/>
        <updated>2023-03-14T15:48:28.000Z</updated>
        <summary type="html"><![CDATA[The media understanding platform serves as an abstraction layer between Machine Learning (ML) algos and various applications.]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NYC: Bronx Zoo]]></title>
        <id>https://thenumbat.github.io/Bronx-Zoo/</id>
        <link href="https://thenumbat.github.io/Bronx-Zoo/"/>
        <updated>2023-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Bronx Zoo, New York, NY, 2022]]></summary>
        <author>
            <name>Max Slater</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I'm selling BTC]]></title>
        <id>https://yurichev.org/BTC/</id>
        <link href="https://yurichev.org/BTC/"/>
        <updated>2023-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I'm selling BTC]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Python][For noobs] What is anonymous/lambda function?]]></title>
        <id>https://yurichev.org/py_lambda/</id>
        <link href="https://yurichev.org/py_lambda/"/>
        <updated>2023-03-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Python][For noobs] What is anonymous/lambda function?]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reverse Engineering for Beginners: 10-years anniversary]]></title>
        <id>https://yurichev.org/REBK10/</id>
        <link href="https://yurichev.org/REBK10/"/>
        <updated>2023-03-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Reverse Engineering for Beginners: 10-years anniversary]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[SAT][SMT][CS] Håkan Kjellerstrand's work]]></title>
        <id>https://yurichev.org/hakank/</id>
        <link href="https://yurichev.org/hakank/"/>
        <updated>2023-03-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[SAT][SMT][CS] Håkan Kjellerstrand's work]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Elasticsearch Indexing Strategy in Asset Management Platform (AMP)]]></title>
        <id>https://medium.com/p/99332231e541</id>
        <link href="https://netflixtechblog.com/elasticsearch-indexing-strategy-in-asset-management-platform-amp-99332231e541?source=rss----2615bd06b42e---4"/>
        <updated>2023-03-10T22:59:11.000Z</updated>
        <summary type="html"><![CDATA[By Burak Bacioglu, Meenakshi Jindal]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Reprocessing Pipeline in Asset Management Platform @Netflix]]></title>
        <id>https://medium.com/p/46fe225c35c9</id>
        <link href="https://netflixtechblog.com/data-reprocessing-pipeline-in-asset-management-platform-netflix-46fe225c35c9?source=rss----2615bd06b42e---4"/>
        <updated>2023-03-10T22:58:47.000Z</updated>
        <summary type="html"><![CDATA[By Meenakshi Jindal]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Version 1.6.12 released]]></title>
        <id>https://nim-lang.org//blog/2023/03/10/version-1612-released.html</id>
        <link href="https://nim-lang.org//blog/2023/03/10/version-1612-released.html"/>
        <updated>2023-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Nim team is happy to announce version 1.6.12, our sixth patch release for
Nim 1.6.
Version 1.6.12 is a result of almost four months of hard work, and it contains
51 commits,
bringing some general improvements over 1.6.10.
We would recommend to all of our users to upgrade and use version 1.6.12.
Installing Nim 1.6
New users
Check out if the package manager of your OS already ships version 1.6.12 or
install it as described here.
Existing users
If you have installed a previous version of Nim using choosenim,
getting Nim 1.6.12 is as easy as:
$ choosenim update stable

Alternatively, you can download Nim 1.6.12 from
our nightlies builds.
Donating to Nim
We would like to encourage you to donate to Nim.
The donated money will be used to further improve Nim by creating bounties
for the most important bugfixes and features.
You can donate via:
Open Collective
Patreon
BountySource
PayPal
Bitcoin: 1BXfuKM2uvoD6mbx4g5xM3eQhLzkCK77tJ
If you are a company, we also offer commercial support.
Bugfixes
These reported issues were fixed:
Fixed “sizeof object containing a set is wrong”
(#20914)
Fixed “Missing bounds check for len(toOpenArray..)”
(#20954)
Fixed “Add warning for bare except: clause”
(#19580)
Fixed “Little Copyright notice inconsistency”
(#20906)
Fixed “std/deques: wrong result after calling shrink”
(#21278)
Fixed “io.readLine adds ‘\00’ char to the end”
(#21273)
Fixed “New JS mdoe issue: return + ref ints.”
(#21317)
Fixed “Bad codegen for passed var seq to proc returning array[] converted to seq with @”
(#21333)
Fixed “Templates allowed to use ambiguous identifier”
(#1027)
Fixed “Mutating a var parameter through a mutable view triggers SIGSEGV”
(#20422)
Fixed “macOS use SecRandomCopyBytes instead of getentropy”
(#20466)
Fixed “gcc error when constructing an object that has the same name in the same file name in 2 different directories”
(#20139)
The complete list of changes is available
here.]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Engine For An Editor]]></title>
        <id>https://matklad.github.io/2023/03/08/an-engine-for-an-editor.html</id>
        <link href="https://matklad.github.io/2023/03/08/an-engine-for-an-editor.html"/>
        <updated>2023-03-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A common trope is how, if one wants to build a game, one should build a game, rather than a game engine, because it is all too easy to fall into a trap of building a generic solution, without getting to the game proper.
It seems to me that the situation with code editors is the opposite --- many people build editors, but few are building editor engines.
What's an editor engine? A made up term I use to denote a thin waist the editor is build upon, the set of core concepts, entities and APIs which power the variety of editor's components.
In this post, I will highlight Emacs' thin waist, which I think is worthy of imitation!]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data ingestion pipeline with Operation Management]]></title>
        <id>https://medium.com/p/3c5c638740a8</id>
        <link href="https://netflixtechblog.com/data-ingestion-pipeline-with-operation-management-3c5c638740a8?source=rss----2615bd06b42e---4"/>
        <updated>2023-03-07T20:39:08.000Z</updated>
        <summary type="html"><![CDATA[by Varun Sekhri, Meenakshi Jindal, Burak Bacioglu]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQL vs NoSQL: shortest possible explanation]]></title>
        <id>https://yurichev.org/NoSQL/</id>
        <link href="https://yurichev.org/NoSQL/"/>
        <updated>2023-03-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[SQL vs NoSQL: shortest possible explanation]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Extra credit]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-12</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-12"/>
        <updated>2023-03-05T07:30:12.000Z</updated>
        <summary type="html"><![CDATA[<p>We've achieved our goals already with this series: we have a web service written
in Rust, built into a Docker image with nix, with a nice dev shell, that we can
deploy to <a href="https://fly.io">fly.io</a>.</p>
<p>But there's always room for improvement, and so I wanted to talk about a few
things we didn't bother doing in the previous chapters.</p>

                        <h2>
                            <a id="making-clash-geoip-available-in-the-dev-shell" class="anchor" href="#making-clash-geoip-available-in-the-dev-shell">
                                Making <code>clash-geoip</code> available in the dev shell
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generating a docker image with nix]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-11</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-11"/>
        <updated>2023-03-05T07:30:11.000Z</updated>
        <summary type="html"><![CDATA[<p>There it is. The final instalment.</p>
<p>Over the course of this series, we've built a <em>very useful</em> Rust web service
that shows us colored ASCII art cats, and we've packaged it with docker, and
deployed it to <a href="https://fly.io">https://fly.io</a>.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making a dev shell with nix flakes]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-10</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-10"/>
        <updated>2023-03-05T07:30:10.000Z</updated>
        <summary type="html"><![CDATA[<p>In the previous chapter, we've made a nix &quot;dev shell&quot; that contained the fly.io
command-line utility, &quot;flyctl&quot;.</p>
<p>That said, that's not how I want us to define a dev shell.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learning Nix from the bottom up]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-9</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-9"/>
        <updated>2023-03-05T07:30:09.000Z</updated>
        <summary type="html"><![CDATA[<p>Remember the snapshot we made allll the way back in <a href="part-1">Part 1</a>? Now's the time to use it.</p>
<p>Well, make sure you've committed and pushed all your changes, but when you're
ready, let's go back in time to before we installed anything catscii-specific in
our VM.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doing geo-location and keeping analytics]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-8</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-8"/>
        <updated>2023-03-05T07:30:08.000Z</updated>
        <summary type="html"><![CDATA[<p>I sold you on some additional functionality for <code>catscii</code> last chapter, and we
got caught up in private registry / docker shenanigans, so, now, let's resume
web development as promised.</p>

                        <h2>
                            <a id="adding-geolocation" class="anchor" href="#adding-geolocation">
                                Adding geolocation
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using the Shipyard private crate registry with Docker]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-7</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-7"/>
        <updated>2023-03-05T07:30:07.000Z</updated>
        <summary type="html"><![CDATA[<div class="dialog bear">
<div class="dialog-head" title="Cool bear says:">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M21.41 41.398c.148-1.787.337-3.572.574-5.351.369-2.772 4.393-11.308 5.624-12.882l.553-.706-1.344-.449a5.772 5.772 0 0 1-3.948-5.478 5.786 5.786 0 0 1 5.779-5.78 5.768 5.768 0 0 1 5.684 4.758l.249 1.396 1.231-.704a28.845 28.845 0 0 1 14.282-3.801c4.991 0 9.93 1.314 14.282 3.801l1.231.704.249-1.396a5.766 5.766 0 0 1 5.683-4.758 5.786 5.786 0 0 1 5.779 5.78 5.772 5.772 0 0 1-3.948 5.478l-1.344.449.552.705c1.911 2.44 2.55 2.541 3.563 5.599 1.422 4.293 2.923 7.964 2.923 12.61v49.875h2V41.373c0-6.519-2.008-12.717-5.819-18.005a7.768 7.768 0 0 0 4.072-6.836c0-4.29-3.49-7.78-7.779-7.78a7.766 7.766 0 0 0-7.3 5.1 30.834 30.834 0 0 0-14.146-3.45 30.834 30.834 0 0 0-14.146 3.45 7.766 7.766 0 0 0-7.301-5.1c-4.289 0-7.779 3.49-7.779 7.78a7.766 7.766 0 0 0 4.072 6.836c-6.681 9.271-5.976 21.037-5.992 32.034-.017 11.946.656 23.895.109 35.838l2.006-.001c.67 0-.17-33.831-.156-36.912.022-4.312.148-8.631.505-12.929z"/><path d="M73.854 31.271v-4.494c0-.971-.79-1.76-1.761-1.76H55.235c-.604 0-1.3.869-1.778 1.905-.015 0-.027-.008-.042-.008H46.789c-.02 0-.037.011-.057.011-.478-1.037-1.175-1.908-1.779-1.908H28.094c-.971 0-1.761.79-1.761 1.76v4.494c0 4.477 3.643 8.119 8.119 8.119h5.12c4.265 0 7.734-3.47 7.734-7.734v-2.091H52.878v2.091c0 4.265 3.47 7.734 7.734 7.734h5.121c4.479-.001 8.121-3.643 8.121-8.119zm-41.713 3.192a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm11.163-2.18l-5.75 3.597a.95.95 0 0 1-1.313-.302.952.952 0 0 1 .303-1.312l5.75-3.597a.953.953 0 0 1 1.01 1.614zm15.168 1.935a1.387 1.387 0 0 1-1.917-.442 1.392 1.392 0 0 1 .442-1.917l8.403-5.255a1.392 1.392 0 0 1 1.475 2.359l-8.403 5.255zm4.909 1.561a.953.953 0 0 1-.506-1.759l5.75-3.597a.952.952 0 1 1 1.01 1.614l-5.75 3.597a.942.942 0 0 1-.504.145z"/><path d="M59.705 45.232h-2c0 1.823-1.483 3.306-3.306 3.306s-3.306-1.483-3.306-3.306v-1.439h1.06a3.294 3.294 0 0 0 3.285-3.285v-.17c0-.259-.038-.508-.095-.749a3.291 3.291 0 0 0-2.665-2.482 3.243 3.243 0 0 0-.525-.053h-4.12c-.18 0-.353.025-.525.053a3.291 3.291 0 0 0-2.665 2.482 3.255 3.255 0 0 0-.095.749v.17a3.294 3.294 0 0 0 3.285 3.285h1.06v1.439a3.31 3.31 0 0 1-3.307 3.306 3.31 3.31 0 0 1-3.306-3.306h-2a5.312 5.312 0 0 0 5.306 5.306 5.293 5.293 0 0 0 4.306-2.229 5.294 5.294 0 0 0 4.306 2.229 5.313 5.313 0 0 0 5.307-5.306zM29.742 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM43.779 58.336a.703.703 0 0 0-1.406 0v5.368a.704.704 0 0 0 1.406 0v-5.368zM57.816 58.336a.703.703 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM71.853 58.336a.704.704 0 0 0-1.407 0v5.368a.704.704 0 0 0 1.407 0v-5.368zM35.354 71.559v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-1.406 0zM49.39 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM63.427 71.559v5.369a.704.704 0 0 0 1.407 0v-5.369a.703.703 0 0 0-1.407 0zM29.038 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.703.703 0 0 0-.703-.703zM43.076 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.406 0v-5.369a.705.705 0 0 0-.703-.703zM57.113 81.364a.704.704 0 0 0-.704.703v5.369a.704.704 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.703-.703zM71.149 81.364a.703.703 0 0 0-.703.703v5.369a.703.703 0 0 0 1.407 0v-5.369a.705.705 0 0 0-.704-.703z"/></svg>
</div>
<div class="dialog-text">
<p>Wait wait wait, so we're not talking about nix yet?</p>
</div>
</div>
<p>Well, no! The service we have is pretty simple, and I want to complicate things
a bit, to show how things would work in both the Dockerfile and the nix
scenario.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying catscii to fly.io]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-6</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-6"/>
        <updated>2023-03-05T07:30:06.000Z</updated>
        <summary type="html"><![CDATA[<div class="disclosure">
<p><strong>Disclosure</strong>: 
Because I used to work for fly.io, I still benefit from an employee discount
at the time of this writing: I don't have to pay for anything deployed there
for now.</p>
<p>fly.io is still <a href="/donate">sponsoring me</a> for developing
<a href="https://github.com/hapsoc/hring">hring</a>, but this isn't a sponsored post. It's
just a good fit for what we're doing here, with a generous free tier.</p>
</div>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing a Dockerfile for catscii]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-5</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-5"/>
        <updated>2023-03-05T07:30:05.000Z</updated>
        <summary type="html"><![CDATA[<p>Now that our service is production-ready, it's time to deploy it somewhere.</p>
<p>There's a lot of ways to approach this: what we are going to do, though, is
build a docker image. Or, I should say, an <a href="https://github.com/opencontainers/image-spec">OCI
image</a>.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serving ASCII cats over HTTP]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-4</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-4"/>
        <updated>2023-03-05T07:30:04.000Z</updated>
        <summary type="html"><![CDATA[<p>Our <code>catscii</code> program does everything we want it to do, except that it's a
command-line application rather than a web server. Let's fix that.</p>

                        <h2>
                            <a id="enter-axum" class="anchor" href="#enter-axum">
                                Enter <code>axum</code>
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Printing ASCII cats to the terminal]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-3</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-3"/>
        <updated>2023-03-05T07:30:03.000Z</updated>
        <summary type="html"><![CDATA[<p>Now that our development environment is all set up, let's make something useful!</p>

                        <h2>
                            <a id="creating-the-catscii-crate" class="anchor" href="#creating-the-catscii-crate">
                                Creating the <code>catscii</code> crate
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Developing over SSH]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-2</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-2"/>
        <updated>2023-03-05T07:30:02.000Z</updated>
        <summary type="html"><![CDATA[<p>With <a href="part-1">the previous part</a>'s VM still running, let's try connecting to our
machine over SSH.</p>

                        <h2>
                            <a id="network-addresses-loopback-and-ip-nets" class="anchor" href="#network-addresses-loopback-and-ip-nets">
                                Network addresses, loopback and IP nets
                            </a>
                        </h2>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting up a local Ubuntu Server VM]]></title>
        <id>https://fasterthanli.me/series/building-a-rust-service-with-nix/part-1</id>
        <link href="https://fasterthanli.me/series/building-a-rust-service-with-nix/part-1"/>
        <updated>2023-03-05T07:30:01.000Z</updated>
        <summary type="html"><![CDATA[<p>The first step to using Nix to build Rust is to do so <em>without</em> Nix, so that
when we finally do, we can feel the difference.</p>
<p>There's many ways to go about this: everyone has their favorite code editor,
base Linux distribution (there's even a <a href="https://nixos.org/">NixOS</a>
distribution, which I won't cover). Some folks like to develop on macOS first,
and <em>then</em> build for Linux.</p>]]></summary>
        <author>
            <name>fasterthanli.me</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Math] Cyclic redundancy check: yet another interesting feature]]></title>
        <id>https://yurichev.org/CRC/</id>
        <link href="https://yurichev.org/CRC/"/>
        <updated>2023-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Math] Cyclic redundancy check: yet another interesting feature]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pulling missing context of replied toots in Mastodon]]></title>
        <id>https://notes.abhinavsarkar.net/2023/mastodon-context</id>
        <link href="https://notes.abhinavsarkar.net/2023/mastodon-context"/>
        <updated>2023-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>Mastodon is a decentralized social media platform that’s become increasingly popular in recent years. Unlike centralized social media platforms like Twitter and Facebook, Mastodon is run on separate individual servers, each with its own rules and community.</p>

<p>Mastodon servers are connected to each other via the <a href="https://activitypub.rocks/">ActivityPub</a> protocol, which allows users to interact across servers. This means that users on one server can follow users on other servers and reply to their toots (Mastodon posts).</p>

<p>However, Mastodon does not automatically pull the context toots of the toots that users replied to from their original server. This means if you reply to a toot from another server, the all other replies to that toot may not be shown to you. See the discussion about this issue <a href="https://github.com/mastodon/mastodon/discussions/22608">here</a>.</p>

<p>This is a problem because it means that you may not be able to see the full context of a conversation, which can make it difficult to understand what’s going on.</p>

<p>The following script is a Python program that extracts the context toots of the toots that users replied to from their original server, and adds them to the local server. The script accomplishes this by first getting all local users that have posted a toot in the last <code class="language-plaintext highlighter-rouge">x</code> hours, where <code class="language-plaintext highlighter-rouge">x</code> is a configurable parameter. It then retrieves all replies to other users by those users in the last <code class="language-plaintext highlighter-rouge">x</code> hours. From there, it gets the context toots of those replies that are already present on the local server.</p>

<p>Then, for each reply toot, it finds the server and ID of the toot that it replied to. It then gets the context toots of those toots from their original server. Finally, it adds those context toots to the local server, which are not already present on the local server by removing the already present context toots from the list of toots to add.</p>

<p>It also caches the URLs of all toots that it has already added to the local server, so that it doesn’t add the same toot multiple times on subsequent runs.</p>

<p>You can run it like this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">ACCESS_TOKEN</span><span class="o">=</span>XXXX python3 pull_context.py fantastic.earth 24
</code></pre></div></div>

<p>The access token needs to have the following scopes enabled:</p>

<ul>
  <li><em>admin:read:accounts</em> for getting the user IDs of the users.</li>
  <li><em>read:statuses</em> for getting the replies to other users.</li>
  <li><em>read:search</em> for adding the context toots to the local server.</li>
</ul>

<p>The script should be run periodically, for example, every 15 minutes. Its only dependency is the <a href="https://github.com/psf/requests/"><code class="language-plaintext highlighter-rouge">requests</code></a> library.</p>

<details>
  <summary>Click to see the script</summary>

  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>
<span class="kn">import</span> <span class="nn">itertools</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">requests</span>


<span class="k">def</span> <span class="nf">pull_context</span><span class="p">(</span>
    <span class="n">server</span><span class="p">,</span>
    <span class="n">access_token</span><span class="p">,</span>
    <span class="n">seen_urls</span><span class="p">,</span>
    <span class="n">replied_toot_server_ids</span><span class="p">,</span>
    <span class="n">reply_interval_hours</span><span class="p">,</span>
<span class="p">):</span>
    <span class="s">"""pull the context toots of toots user replied to, from their
    original server, and add them to the local server."""</span>
    <span class="n">user_ids</span> <span class="o">=</span> <span class="n">get_active_user_ids</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">reply_interval_hours</span><span class="p">)</span>
    <span class="n">reply_toots</span> <span class="o">=</span> <span class="n">get_all_reply_toots</span><span class="p">(</span>
        <span class="n">server</span><span class="p">,</span> <span class="n">user_ids</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">seen_urls</span><span class="p">,</span> <span class="n">reply_interval_hours</span>
    <span class="p">)</span>
    <span class="n">known_context_urls</span> <span class="o">=</span> <span class="n">get_all_known_context_urls</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">reply_toots</span><span class="p">)</span>
    <span class="n">seen_urls</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">known_context_urls</span><span class="p">)</span>
    <span class="n">replied_toot_ids</span> <span class="o">=</span> <span class="n">get_all_replied_toot_server_ids</span><span class="p">(</span>
        <span class="n">server</span><span class="p">,</span> <span class="n">reply_toots</span><span class="p">,</span> <span class="n">replied_toot_server_ids</span>
    <span class="p">)</span>
    <span class="n">context_urls</span> <span class="o">=</span> <span class="n">get_all_context_urls</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">replied_toot_ids</span><span class="p">)</span>
    <span class="n">add_context_urls</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">context_urls</span><span class="p">,</span> <span class="n">seen_urls</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">get_active_user_ids</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">reply_interval_hours</span><span class="p">):</span>
    <span class="s">"""get all user IDs on the server that have posted a toot in the given
       time interval"""</span>
    <span class="n">since</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="n">now</span><span class="p">()</span> <span class="o">-</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="n">reply_interval_hours</span> <span class="o">/</span> <span class="mi">24</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/api/v1/admin/accounts"</span>
    <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span>
        <span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">"Authorization"</span><span class="p">:</span> <span class="sa">f</span><span class="s">"Bearer </span><span class="si">{</span><span class="n">access_token</span><span class="si">}</span><span class="s">"</span><span class="p">},</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">5</span>
    <span class="p">)</span>
    <span class="k">if</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">.</span><span class="n">json</span><span class="p">():</span>
            <span class="n">last_status_at</span> <span class="o">=</span> <span class="n">user</span><span class="p">[</span><span class="s">"account"</span><span class="p">][</span><span class="s">"last_status_at"</span><span class="p">]</span>
            <span class="k">if</span> <span class="n">last_status_at</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
                <span class="n">last_active</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">last_status_at</span><span class="p">,</span> <span class="s">"%Y-%m-%d"</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">last_active</span> <span class="o">&gt;</span> <span class="n">since</span><span class="p">:</span>
                    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Found active user: </span><span class="si">{</span><span class="n">user</span><span class="p">[</span><span class="s">'username'</span><span class="p">]</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
                    <span class="k">yield</span> <span class="n">user</span><span class="p">[</span><span class="s">"id"</span><span class="p">]</span>
    <span class="k">elif</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">403</span><span class="p">:</span>
        <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error getting user IDs on server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">. "</span>
            <span class="s">"Make sure you have the admin:read:accounts scope enabled for your access token."</span>
        <span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error getting user IDs on server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">"</span>
        <span class="p">)</span>


<span class="k">def</span> <span class="nf">get_all_reply_toots</span><span class="p">(</span>
    <span class="n">server</span><span class="p">,</span> <span class="n">user_ids</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">seen_urls</span><span class="p">,</span> <span class="n">reply_interval_hours</span>
<span class="p">):</span>
    <span class="s">"""get all replies to other users by the given users in the last day"""</span>
    <span class="n">replies_since</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="n">now</span><span class="p">()</span> <span class="o">-</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">hours</span><span class="o">=</span><span class="n">reply_interval_hours</span><span class="p">)</span>
    <span class="n">reply_toots</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span>
        <span class="n">itertools</span><span class="p">.</span><span class="n">chain</span><span class="p">.</span><span class="n">from_iterable</span><span class="p">(</span>
            <span class="n">get_reply_toots</span><span class="p">(</span>
                <span class="n">user_id</span><span class="p">,</span> <span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">seen_urls</span><span class="p">,</span> <span class="n">replies_since</span>
            <span class="p">)</span>
            <span class="k">for</span> <span class="n">user_id</span> <span class="ow">in</span> <span class="n">user_ids</span>
        <span class="p">)</span>
    <span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Found </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">reply_toots</span><span class="p">)</span><span class="si">}</span><span class="s"> reply toots"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">reply_toots</span>


<span class="k">def</span> <span class="nf">get_reply_toots</span><span class="p">(</span><span class="n">user_id</span><span class="p">,</span> <span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">seen_urls</span><span class="p">,</span> <span class="n">reply_since</span><span class="p">):</span>
    <span class="s">"""get replies by the user to other users since the given date"""</span>
    <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/api/v1/accounts/</span><span class="si">{</span><span class="n">user_id</span><span class="si">}</span><span class="s">/statuses?exclude_replies=false&amp;limit=40"</span>

    <span class="k">try</span><span class="p">:</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span>
            <span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">"Authorization"</span><span class="p">:</span> <span class="sa">f</span><span class="s">"Bearer </span><span class="si">{</span><span class="n">access_token</span><span class="si">}</span><span class="s">"</span><span class="p">},</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">5</span>
        <span class="p">)</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">ex</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error getting replies for user </span><span class="si">{</span><span class="n">user_id</span><span class="si">}</span><span class="s"> on server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">ex</span><span class="si">}</span><span class="s">"</span>
        <span class="p">)</span>
        <span class="k">return</span> <span class="p">[]</span>

    <span class="k">if</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="n">toots</span> <span class="o">=</span> <span class="p">[</span>
            <span class="n">toot</span>
            <span class="k">for</span> <span class="n">toot</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
            <span class="k">if</span> <span class="n">toot</span><span class="p">[</span><span class="s">"in_reply_to_id"</span><span class="p">]</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span>
            <span class="ow">and</span> <span class="n">toot</span><span class="p">[</span><span class="s">"url"</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">seen_urls</span>
            <span class="ow">and</span> <span class="n">datetime</span><span class="p">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">toot</span><span class="p">[</span><span class="s">"created_at"</span><span class="p">],</span> <span class="s">"%Y-%m-%dT%H:%M:%S.%fZ"</span><span class="p">)</span>
            <span class="o">&gt;</span> <span class="n">reply_since</span>
        <span class="p">]</span>
        <span class="k">for</span> <span class="n">toot</span> <span class="ow">in</span> <span class="n">toots</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Found reply toot: </span><span class="si">{</span><span class="n">toot</span><span class="p">[</span><span class="s">'url'</span><span class="p">]</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">toots</span>
    <span class="k">elif</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">403</span><span class="p">:</span>
        <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error getting replies for user </span><span class="si">{</span><span class="n">user_id</span><span class="si">}</span><span class="s"> on server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">. "</span>
            <span class="s">"Make sure you have the read:statuses scope enabled for your access token."</span>
        <span class="p">)</span>

    <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span>
        <span class="sa">f</span><span class="s">"Error getting replies for user </span><span class="si">{</span><span class="n">user_id</span><span class="si">}</span><span class="s"> on server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">"</span>
    <span class="p">)</span>


<span class="k">def</span> <span class="nf">get_all_known_context_urls</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">reply_toots</span><span class="p">):</span>
    <span class="s">"""get the context toots of the given toots from their original server"""</span>
    <span class="n">known_context_urls</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span>
        <span class="nb">filter</span><span class="p">(</span>
            <span class="k">lambda</span> <span class="n">url</span><span class="p">:</span> <span class="ow">not</span> <span class="n">url</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/"</span><span class="p">),</span>
            <span class="n">itertools</span><span class="p">.</span><span class="n">chain</span><span class="p">.</span><span class="n">from_iterable</span><span class="p">(</span>
                <span class="n">get_toot_context</span><span class="p">(</span><span class="o">*</span><span class="n">parse_mastodon_url</span><span class="p">(</span><span class="n">toot</span><span class="p">[</span><span class="s">"url"</span><span class="p">]),</span> <span class="n">toot</span><span class="p">[</span><span class="s">"url"</span><span class="p">])</span>
                <span class="k">for</span> <span class="n">toot</span> <span class="ow">in</span> <span class="n">reply_toots</span>
            <span class="p">),</span>
        <span class="p">)</span>
    <span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Found </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">known_context_urls</span><span class="p">)</span><span class="si">}</span><span class="s"> known context toots"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">known_context_urls</span>


<span class="k">def</span> <span class="nf">get_all_replied_toot_server_ids</span><span class="p">(</span>
    <span class="n">server</span><span class="p">,</span> <span class="n">reply_toots</span><span class="p">,</span> <span class="n">replied_toot_server_ids</span>
<span class="p">):</span>
    <span class="s">"""get the server and ID of the toots the given toots replied to"""</span>
    <span class="k">return</span> <span class="nb">filter</span><span class="p">(</span>
        <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">,</span>
        <span class="p">(</span>
            <span class="n">get_replied_toot_server_id</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">toot</span><span class="p">,</span> <span class="n">replied_toot_server_ids</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">toot</span> <span class="ow">in</span> <span class="n">reply_toots</span>
        <span class="p">),</span>
    <span class="p">)</span>


<span class="k">def</span> <span class="nf">get_replied_toot_server_id</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">toot</span><span class="p">,</span> <span class="n">replied_toot_server_ids</span><span class="p">):</span>
    <span class="s">"""get the server and ID of the toot the given toot replied to"""</span>
    <span class="n">in_reply_to_id</span> <span class="o">=</span> <span class="n">toot</span><span class="p">[</span><span class="s">"in_reply_to_id"</span><span class="p">]</span>
    <span class="n">in_reply_to_account_id</span> <span class="o">=</span> <span class="n">toot</span><span class="p">[</span><span class="s">"in_reply_to_account_id"</span><span class="p">]</span>
    <span class="n">mentions</span> <span class="o">=</span> <span class="p">[</span>
        <span class="n">mention</span>
        <span class="k">for</span> <span class="n">mention</span> <span class="ow">in</span> <span class="n">toot</span><span class="p">[</span><span class="s">"mentions"</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">mention</span><span class="p">[</span><span class="s">"id"</span><span class="p">]</span> <span class="o">==</span> <span class="n">in_reply_to_account_id</span>
    <span class="p">]</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">mentions</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">None</span>

    <span class="n">mention</span> <span class="o">=</span> <span class="n">mentions</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

    <span class="n">o_url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/@</span><span class="si">{</span><span class="n">mention</span><span class="p">[</span><span class="s">'acct'</span><span class="p">]</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">in_reply_to_id</span><span class="si">}</span><span class="s">"</span>
    <span class="k">if</span> <span class="n">o_url</span> <span class="ow">in</span> <span class="n">replied_toot_server_ids</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">replied_toot_server_ids</span><span class="p">[</span><span class="n">o_url</span><span class="p">]</span>

    <span class="n">url</span> <span class="o">=</span> <span class="n">get_redirect_url</span><span class="p">(</span><span class="n">o_url</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">url</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">None</span>

    <span class="n">match</span> <span class="o">=</span> <span class="n">parse_mastodon_url</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">match</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">replied_toot_server_ids</span><span class="p">[</span><span class="n">o_url</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">match</span><span class="p">)</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">match</span><span class="p">)</span>

    <span class="n">match</span> <span class="o">=</span> <span class="n">parse_pleroma_url</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">match</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">replied_toot_server_ids</span><span class="p">[</span><span class="n">o_url</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">match</span><span class="p">)</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">match</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Error parsing toot URL </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="n">replied_toot_server_ids</span><span class="p">[</span><span class="n">o_url</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
    <span class="k">return</span> <span class="bp">None</span>


<span class="k">def</span> <span class="nf">parse_mastodon_url</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="s">"""parse a Mastodon URL and return the server and ID"""</span>
    <span class="n">match</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">match</span><span class="p">(</span>
        <span class="sa">r</span><span class="s">"https://(?P&lt;server&gt;.*)/@(?P&lt;username&gt;.*)/(?P&lt;toot_id&gt;.*)"</span><span class="p">,</span> <span class="n">url</span>
    <span class="p">)</span>
    <span class="k">if</span> <span class="n">match</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">match</span><span class="p">.</span><span class="n">group</span><span class="p">(</span><span class="s">"server"</span><span class="p">),</span> <span class="n">match</span><span class="p">.</span><span class="n">group</span><span class="p">(</span><span class="s">"toot_id"</span><span class="p">))</span>
    <span class="k">return</span> <span class="bp">None</span>


<span class="k">def</span> <span class="nf">parse_pleroma_url</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="s">"""parse a Pleroma URL and return the server and ID"""</span>
    <span class="n">match</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">match</span><span class="p">(</span><span class="sa">r</span><span class="s">"https://(?P&lt;server&gt;.*)/objects/(?P&lt;toot_id&gt;.*)"</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">match</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">server</span> <span class="o">=</span> <span class="n">match</span><span class="p">.</span><span class="n">group</span><span class="p">(</span><span class="s">"server"</span><span class="p">)</span>
        <span class="n">url</span> <span class="o">=</span> <span class="n">get_redirect_url</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
        <span class="n">match</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">match</span><span class="p">(</span><span class="sa">r</span><span class="s">"/notice/(?P&lt;toot_id&gt;.*)"</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">match</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">match</span><span class="p">.</span><span class="n">group</span><span class="p">(</span><span class="s">"toot_id"</span><span class="p">))</span>
        <span class="k">return</span> <span class="bp">None</span>
    <span class="k">return</span> <span class="bp">None</span>


<span class="k">def</span> <span class="nf">get_redirect_url</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="s">"""get the URL given URL redirects to"""</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">allow_redirects</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">ex</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Error getting redirect URL for URL </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">. Exception: </span><span class="si">{</span><span class="n">ex</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">None</span>

    <span class="k">if</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">None</span>
    <span class="k">elif</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">302</span><span class="p">:</span>
        <span class="n">redirect_url</span> <span class="o">=</span> <span class="n">resp</span><span class="p">.</span><span class="n">headers</span><span class="p">[</span><span class="s">"Location"</span><span class="p">]</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Discovered redirect for URL </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">redirect_url</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error getting redirect URL for URL </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">"</span>
        <span class="p">)</span>
        <span class="k">return</span> <span class="bp">None</span>


<span class="k">def</span> <span class="nf">get_all_context_urls</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">replied_toot_ids</span><span class="p">):</span>
    <span class="s">"""get the URLs of the context toots of the given toots"""</span>
    <span class="k">return</span> <span class="nb">filter</span><span class="p">(</span>
        <span class="k">lambda</span> <span class="n">url</span><span class="p">:</span> <span class="ow">not</span> <span class="n">url</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/"</span><span class="p">),</span>
        <span class="n">itertools</span><span class="p">.</span><span class="n">chain</span><span class="p">.</span><span class="n">from_iterable</span><span class="p">(</span>
            <span class="n">get_toot_context</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">toot_id</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
            <span class="k">for</span> <span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">toot_id</span><span class="p">))</span> <span class="ow">in</span> <span class="n">replied_toot_ids</span>
        <span class="p">),</span>
    <span class="p">)</span>


<span class="k">def</span> <span class="nf">get_toot_context</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">toot_id</span><span class="p">,</span> <span class="n">toot_url</span><span class="p">):</span>
    <span class="s">"""get the URLs of the context toots of the given toot"""</span>
    <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/api/v1/statuses/</span><span class="si">{</span><span class="n">toot_id</span><span class="si">}</span><span class="s">/context"</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">ex</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Error getting context for toot </span><span class="si">{</span><span class="n">toot_url</span><span class="si">}</span><span class="s">. Exception: </span><span class="si">{</span><span class="n">ex</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">return</span> <span class="p">[]</span>

    <span class="k">if</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">resp</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Got context for toot </span><span class="si">{</span><span class="n">toot_url</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">toot</span><span class="p">[</span><span class="s">"url"</span><span class="p">]</span> <span class="k">for</span> <span class="n">toot</span> <span class="ow">in</span> <span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="s">"ancestors"</span><span class="p">]</span> <span class="o">+</span> <span class="n">res</span><span class="p">[</span><span class="s">"descendants"</span><span class="p">]))</span>

    <span class="k">print</span><span class="p">(</span>
        <span class="sa">f</span><span class="s">"Error getting context for toot </span><span class="si">{</span><span class="n">toot_url</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">"</span>
    <span class="p">)</span>
    <span class="k">return</span> <span class="p">[]</span>


<span class="k">def</span> <span class="nf">add_context_urls</span><span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">,</span> <span class="n">context_urls</span><span class="p">,</span> <span class="n">seen_urls</span><span class="p">):</span>
    <span class="s">"""add the given toot URLs to the server"""</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">url</span> <span class="ow">in</span> <span class="n">context_urls</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">url</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">seen_urls</span><span class="p">:</span>
            <span class="n">seen_urls</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
            <span class="n">add_context_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">)</span>
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Added </span><span class="si">{</span><span class="n">count</span><span class="si">}</span><span class="s"> new context toots"</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">add_context_url</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">server</span><span class="p">,</span> <span class="n">access_token</span><span class="p">):</span>
    <span class="s">"""add the given toot URL to the server"""</span>
    <span class="n">search_url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"https://</span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">/api/v2/search?q=</span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">&amp;resolve=true&amp;limit=1"</span>

    <span class="k">try</span><span class="p">:</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span>
            <span class="n">search_url</span><span class="p">,</span>
            <span class="n">headers</span><span class="o">=</span><span class="p">{</span><span class="s">"Authorization"</span><span class="p">:</span> <span class="sa">f</span><span class="s">"Bearer </span><span class="si">{</span><span class="n">access_token</span><span class="si">}</span><span class="s">"</span><span class="p">},</span>
            <span class="n">timeout</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span>
        <span class="p">)</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">ex</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error adding url </span><span class="si">{</span><span class="n">search_url</span><span class="si">}</span><span class="s"> to server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Exception: </span><span class="si">{</span><span class="n">ex</span><span class="si">}</span><span class="s">"</span>
        <span class="p">)</span>
        <span class="k">return</span>

    <span class="k">if</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Added context url </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">resp</span><span class="p">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">403</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error adding url </span><span class="si">{</span><span class="n">search_url</span><span class="si">}</span><span class="s"> to server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">. "</span>
            <span class="s">"Make sure you have the read:search scope enabled for your access token."</span>
        <span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span>
            <span class="sa">f</span><span class="s">"Error adding url </span><span class="si">{</span><span class="n">search_url</span><span class="si">}</span><span class="s"> to server </span><span class="si">{</span><span class="n">server</span><span class="si">}</span><span class="s">. Status code: </span><span class="si">{</span><span class="n">resp</span><span class="p">.</span><span class="n">status_code</span><span class="si">}</span><span class="s">"</span>
        <span class="p">)</span>


<span class="k">class</span> <span class="nc">OrderedSet</span><span class="p">:</span>
    <span class="s">"""An ordered set implementation over a dict"""</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">iterable</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_dict</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">item</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_dict</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">_dict</span><span class="p">[</span><span class="n">item</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">iterable</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__contains__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">item</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_dict</span>

    <span class="k">def</span> <span class="nf">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">iter</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">_dict</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">_dict</span><span class="p">)</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">HELP_MESSAGE</span> <span class="o">=</span> <span class="s">"""
Usage: ACCESS_TOKEN=XXXX python3 pull_context.py &lt;server&gt; &lt;reply_interval_in_hours&gt;

To run this script, set the ACCESS_TOKEN environment variable to your
Mastodon access token. The access token can be generated at
https://&lt;server&gt;/settings/applications, and must have read:search,
read:statuses and admin:read:accounts scopes.
"""</span>

    <span class="k">try</span><span class="p">:</span>
        <span class="n">ACCESS_TOKEN</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">[</span><span class="s">"ACCESS_TOKEN"</span><span class="p">]</span>
    <span class="k">except</span> <span class="nb">KeyError</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"ACCESS_TOKEN environment variable not set."</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">HELP_MESSAGE</span><span class="p">)</span>
        <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">HELP_MESSAGE</span><span class="p">)</span>
        <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

    <span class="n">SERVER</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">REPLY_INTERVAL_IN_HOURS</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
    <span class="n">SEEN_URLS_FILE</span> <span class="o">=</span> <span class="s">"seen_urls"</span>
    <span class="n">REPLIED_TOOT_SERVER_IDS_FILE</span> <span class="o">=</span> <span class="s">"replied_toot_server_ids"</span>

    <span class="n">SEEN_URLS</span> <span class="o">=</span> <span class="n">OrderedSet</span><span class="p">([])</span>
    <span class="k">if</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">exists</span><span class="p">(</span><span class="n">SEEN_URLS_FILE</span><span class="p">):</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">SEEN_URLS_FILE</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">SEEN_URLS</span> <span class="o">=</span> <span class="n">OrderedSet</span><span class="p">(</span><span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">().</span><span class="n">splitlines</span><span class="p">())</span>

    <span class="n">REPLIED_TOOT_SERVER_IDS</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">if</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">exists</span><span class="p">(</span><span class="n">REPLIED_TOOT_SERVER_IDS_FILE</span><span class="p">):</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">REPLIED_TOOT_SERVER_IDS_FILE</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">REPLIED_TOOT_SERVER_IDS</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>

    <span class="n">pull_context</span><span class="p">(</span>
        <span class="n">SERVER</span><span class="p">,</span>
        <span class="n">ACCESS_TOKEN</span><span class="p">,</span>
        <span class="n">SEEN_URLS</span><span class="p">,</span>
        <span class="n">REPLIED_TOOT_SERVER_IDS</span><span class="p">,</span>
        <span class="n">REPLY_INTERVAL_IN_HOURS</span><span class="p">,</span>
    <span class="p">)</span>

    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">SEEN_URLS_FILE</span><span class="p">,</span> <span class="s">"w"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">SEEN_URLS</span><span class="p">)[:</span><span class="mi">10000</span><span class="p">]))</span>

    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">REPLIED_TOOT_SERVER_IDS_FILE</span><span class="p">,</span> <span class="s">"w"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="nb">dict</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">REPLIED_TOOT_SERVER_IDS</span><span class="p">.</span><span class="n">items</span><span class="p">())[:</span><span class="mi">10000</span><span class="p">]),</span> <span class="n">f</span><span class="p">)</span>
</code></pre></div>  </div>

</details>

<p>I hope this is useful to someone else. I’m not a Python expert, so I’m sure there are some things that could be improved. I’m also not sure if this is the best way to do this, but it seems to work well enough for me.</p>

<p>You can like, repost, or comment on this post on <a href="https://fantastic.earth/@abnv/109971076654557910">Mastodon</a>.</p>]]></summary>
        <author>
            <name>Posts on abhinavsarkar.net</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Month with Nim: Feburary 2023]]></title>
        <id>https://nim-lang.org//blog/2023/03/02/this-month-with-nim.html</id>
        <link href="https://nim-lang.org//blog/2023/03/02/this-month-with-nim.html"/>
        <updated>2023-03-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[ttop
Author: Inv2004
System monitoring tool with TUI, historical data service and triggers
[x] Saving historical snapshots via systemd.timer or crontab
[x] Scroll via historical data
[x] TUI with critical values highlight
[x] External triggers (for notifications or other needs)
[x] Ascii graph of historical stats (via https://github.com/Yardanico/asciigraph)
[x] Temperature via sysfs
[x] User-space only, doesn’t require root permissions
[x] Static build
[x] Threads tree
ni18n
Author: Hein Thant
ni18n is a super simple and fast Nim macro for internationalization and localization.
No runtime lookup for translation since all translations are compiled down to Nim functions except we still have a runtime case statement for locale to call correct generated locale specific function.
import ni18n
…]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Math][Python][Bash] Printing reminders picked using lorarithmic scale]]></title>
        <id>https://yurichev.org/log_reminders/</id>
        <link href="https://yurichev.org/log_reminders/"/>
        <updated>2023-02-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Math][Python][Bash] Printing reminders picked using lorarithmic scale]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[discourse.yurichev.com]]></title>
        <id>https://yurichev.org/discourse/</id>
        <link href="https://yurichev.org/discourse/"/>
        <updated>2023-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[discourse.yurichev.com]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VPN from Android to Linux: WireGuard working example]]></title>
        <id>https://yurichev.org/wireguard2/</id>
        <link href="https://yurichev.org/wireguard2/"/>
        <updated>2023-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[VPN from Android to Linux: WireGuard working example]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why SAT Is Hard]]></title>
        <id>https://matklad.github.io/2023/02/21/why-SAT-is-hard.html</id>
        <link href="https://matklad.github.io/2023/02/21/why-SAT-is-hard.html"/>
        <updated>2023-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An introductory post about complexity theory today!
It is relatively well-known that there exist so-called NP-complete problems --- particularly hard problems, such that, if you solve one of them efficiently, you can solve all of them efficiently.
I think I've learned relatively early that, e.g., SAT is such a hard problem.
I've similarly learned a bunch of specific examples of equally hard problems, where solving one solves the other.
However, why SAT is harder than any NP problem remained a mystery for a rather long time to me.
It is a shame --- this fact is rather intuitive and easy to understand.
This post is my attempt at an explanation.
It assumes some familiarity with the space, but it's not going to be too technical or thorough.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Math] Binary logarithm, part III]]></title>
        <id>https://yurichev.org/log2_3/</id>
        <link href="https://yurichev.org/log2_3/"/>
        <updated>2023-02-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[[Math] Binary logarithm, part III]]></summary>
        <author>
            <name>Dennis Yurichev's blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Lambda Calculus With Coroutines and Heapless, Directly-Called Closures]]></title>
        <id>https://ayazhafiz.com/articles/23/a-lambda-calculus-with-coroutines-and-heapless-closures</id>
        <link href="https://ayazhafiz.com/articles/23/a-lambda-calculus-with-coroutines-and-heapless-closures"/>
        <updated>2023-02-18T06:00:00.000Z</updated>
        <summary type="html"><![CDATA[co_lc is a lambda calculus extended with stackful coroutines. An efficient implementation for the compilation and virtual machine execution of co_lc is presented. The implementation supports tail-call optimization and eliminates all indirect calls by defunctionalizing closures.]]></summary>
        <author>
            <name>ayazhafiz.com</name>
        </author>
    </entry>
</feed>