<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2023-07-02T01:17:57.819Z</id>
    <title>osmos::feed</title>
    <updated>2023-07-02T01:17:57.820Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Parsing time stamps faster with SIMD instructions]]></title>
        <id>https://lemire.me/blog/?p=20651</id>
        <link href="https://lemire.me/blog/2023/07/01/parsing-time-stamps-faster-with-simd-instructions/"/>
        <updated>2023-07-01T21:38:06.000Z</updated>
        <summary type="html"><![CDATA[In software, it is common to represent time as a time-stamp string. It is usually specified by a time format string. Some standards use the format %Y%m%d%H%M%S meaning that we print the year, the month, the day, the hours, the minutes and the seconds. The current time as I write this blog post would be … Continue reading Parsing time stamps faster with SIMD instructions]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dynamic bit shuffle using AVX-512]]></title>
        <id>https://lemire.me/blog/?p=20642</id>
        <link href="https://lemire.me/blog/2023/06/29/dynamic-bit-shuffle-using-avx-512/"/>
        <updated>2023-06-29T15:59:01.000Z</updated>
        <summary type="html"><![CDATA[Suppose that you want to reorder, arbitrarily, the bits in a 64-bit word. This question was raised on Twitter by @experquisite. Formally, you might want to provide, for each of the 64 bit position, an original bit position you want to copy. Hence, the following code would reverse the bit order in your 64-bit word: … Continue reading Dynamic bit shuffle using AVX-512]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Version 1.6.14 released]]></title>
        <id>https://nim-lang.org//blog/2023/06/27/version-1614-released.html</id>
        <link href="https://nim-lang.org//blog/2023/06/27/version-1614-released.html"/>
        <updated>2023-06-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Nim team is happy to announce version 1.6.14, our seventh (and largest) patch release for
Nim 1.6.
Version 1.6.14 is a result of three months of hard work, and it contains
179 commits,
bringing lots of general improvements over 1.6.12.
This release contains more than the usual amount of commits for a patch release
because we want to give you the best Nim v1 experience, in case you won’t be able to
immediately switch to Nim v2, which will be our next release.
We would recommend to all of our users to upgrade and use version 1.6.14.
Installing Nim 1.6
New users
Check out if the package manager of your OS already ships version 1.6.14 or
install it as described here.
Existing users
If you have installed a previous version of Nim using choosenim,
getting Nim 1.6.14 is as easy as:
$ chooseni…]]></summary>
        <author>
            <name>Nim Programming Language</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solving "Two Sum" in C with a tiny hash table]]></title>
        <id>https://nullprogram.com/blog/2023/06/26/</id>
        <link href="https://nullprogram.com/blog/2023/06/26/"/>
        <updated>2023-06-26T19:38:18.000Z</updated>
        <summary type="html"><![CDATA[I came across a question: How does one efficiently solve Two Sum in C?
There’s a naive quadratic time solution, but also an amortized linear time
solution using a hash table. Without a built-in or standard library hash
table, the latter sounds onerous. However, a mask-step-index table,
a hash table construction suitable for many problems, requires only a few
lines of code. This approach is useful even when a standard hash table is
available, because by exploiting the known problem constraints, it
beats typical generic hash table performance by 1–2 orders of magnitude
(demo).
The Two Sum exercise, restated:
Given an integer array and target, return the distinct indices of two
elements that sum to the target.
In particular, the solution doesn’t find elements, but their indices. The
exercise …]]></summary>
        <author>
            <name>null program</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Science and Technology links (June 25 2023)]]></title>
        <id>https://lemire.me/blog/?p=20640</id>
        <link href="https://lemire.me/blog/2023/06/25/science-and-technology-links-june-25-2023/"/>
        <updated>2023-06-25T17:32:56.000Z</updated>
        <summary type="html"><![CDATA[Women in highly religious relationships report the highest levels of relationship quality. US politics is largely divided into two parties (Republicans and Democrats). People who are affiliated with the Republicans have many more kids. The Antartic ice shelves gained 661 gigaton of ice over the past decade. A low protein diet increases mortality among older … Continue reading Science and Technology links (June 25 2023)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My ranking of every Shakespeare play]]></title>
        <id>https://nullprogram.com/blog/2023/06/22/</id>
        <link href="https://nullprogram.com/blog/2023/06/22/"/>
        <updated>2023-06-22T19:10:25.000Z</updated>
        <summary type="html"><![CDATA[This article was discussed on Hacker News.
A few years ago I set out on a personal journey to study and watch a
performance of each of Shakespeare’s 37 plays. I’ve reached my goal and,
though it’s not a usual topic around here, I wanted to get my thoughts
down while fresh. I absolutely loved some of these plays and performances,
and so I’d like to highlight them, especially because my favorites are,
with one exception, not “popular” plays. Per tradition, I begin with my
least enjoyed plays and work my way up. All performances were either a
recording of a live stage or an adaptation, so they’re also available to
you if you’re interested, though in most cases not for free. I’ll mention
notable performances when applicable. The availability of a great
performance certainly influenced my play …]]></summary>
        <author>
            <name>null program</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detecting Scene Changes in Audiovisual Content]]></title>
        <id>https://medium.com/p/77a61d3eaad6</id>
        <link href="https://netflixtechblog.com/detecting-scene-changes-in-audiovisual-content-77a61d3eaad6?source=rss----2615bd06b42e---4"/>
        <updated>2023-06-20T16:51:36.000Z</updated>
        <summary type="html"><![CDATA[Avneesh Saluja, Andy Yao, Hossein Taghavi]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Merge Queue]]></title>
        <id>https://matklad.github.io/2023/06/18/GitHub-merge-queue.html</id>
        <link href="https://matklad.github.io/2023/06/18/GitHub-merge-queue.html"/>
        <updated>2023-06-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Short, unedited note on GitHub merge queue.]]></summary>
        <author>
            <name>matklad</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating Netflix to GraphQL Safely]]></title>
        <id>https://medium.com/p/8e1e4d4f1e72</id>
        <link href="https://netflixtechblog.com/migrating-netflix-to-graphql-safely-8e1e4d4f1e72?source=rss----2615bd06b42e---4"/>
        <updated>2023-06-14T17:59:46.000Z</updated>
        <summary type="html"><![CDATA[By Jennifer Shin, Tejas Shikhare, Will Emmanuel]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Citogenesis in science and the importance of real problems]]></title>
        <id>http://lemire.me/blog/?p=3931</id>
        <link href="https://lemire.me/blog/2023/06/14/citogenesis-in-science-and-the-importance-of-real-problems/"/>
        <updated>2023-06-14T10:05:44.000Z</updated>
        <summary type="html"><![CDATA[Scientists publish papers in refereed journals and conferences: they write up their results and we ask anonymous referees to assess it. If the work is published, presumably because the anonymous referees found nothing objectionable, the published paper joins the “literature”. It is not a strict requirement: you can do excellent research without publishing in refereed … Continue reading Citogenesis in science and the importance of real problems]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating Critical Traffic At Scale with No Downtime — Part 2]]></title>
        <id>https://medium.com/p/4b1c8c7155c1</id>
        <link href="https://netflixtechblog.com/migrating-critical-traffic-at-scale-with-no-downtime-part-2-4b1c8c7155c1?source=rss----2615bd06b42e---4"/>
        <updated>2023-06-13T17:23:17.000Z</updated>
        <summary type="html"><![CDATA[Shyam Gala, Javier Fernandez-Ivern, Anup Rokkam Pratap, Devang Shah]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Escrow Buddy: An open-source tool from Netflix for remediation of missing FileVault keys in MDM]]></title>
        <id>https://medium.com/p/815aef5107cd</id>
        <link href="https://netflixtechblog.com/escrow-buddy-an-open-source-tool-from-netflix-for-remediation-of-missing-filevault-keys-in-mdm-815aef5107cd?source=rss----2615bd06b42e---4"/>
        <updated>2023-06-12T16:36:25.000Z</updated>
        <summary type="html"><![CDATA[Netflix has open-sourced Escrow Buddy, which helps Security and IT teams ensure they have valid FileVault recovery keys for all their Macs…]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Science and Technology links (June 11 2023)]]></title>
        <id>https://lemire.me/blog/?p=20619</id>
        <link href="https://lemire.me/blog/2023/06/11/science-and-technology-links-june-11-2023/"/>
        <updated>2023-06-11T19:45:32.000Z</updated>
        <summary type="html"><![CDATA[Similar species can have vastly different lifespan. Researchers have been looking for the limiting factors that explain these differences. As we age, our genes are expressed differently through methylation. Different species vary their methylation at different speeds. There is some evidence that it could be that the methylation rate that determines the lifespan. If that … Continue reading Science and Technology links (June 11 2023)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Parsing IP addresses crazily fast]]></title>
        <id>https://lemire.me/blog/?p=20611</id>
        <link href="https://lemire.me/blog/2023/06/08/parsing-ip-addresses-crazily-fast/"/>
        <updated>2023-06-08T20:47:56.000Z</updated>
        <summary type="html"><![CDATA[Most of us are familiar with IP addresses: they are strings typically of the form “ddd.ddd.ddd.ddd” where ddd is a decimal number of up to three digits in the range 0 to 255. For example, 127.0.0.1 or 192.168.0.2. Each of the four number is a byte value, and the address is an IPv4 network address … Continue reading Parsing IP addresses crazily fast]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Native Frame Rate Playback]]></title>
        <id>https://medium.com/p/6c87836a948</id>
        <link href="https://netflixtechblog.com/native-frame-rate-playback-6c87836a948?source=rss----2615bd06b42e---4"/>
        <updated>2023-06-05T16:31:44.000Z</updated>
        <summary type="html"><![CDATA[This article talks about a novel HDMI technology and how it is used within the Netflix Application to improve a user’s experience.]]></summary>
        <author>
            <name>Netflix Technology Blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Science and Technogy links (June 3 2023)]]></title>
        <id>https://lemire.me/blog/?p=20599</id>
        <link href="https://lemire.me/blog/2023/06/03/science-and-technogy-links-june-3-2023/"/>
        <updated>2023-06-03T20:41:56.000Z</updated>
        <summary type="html"><![CDATA[There are fewer serial killers these days. Some suggests it is due to better forensic techniques: we catch the killers faster and more efficiently. Between the beginnings of the Web (1996) and today, the household Internet connection bandwidth got over 5000 times faster. Thus what took nearly two hours of download time back then can … Continue reading Science and Technogy links (June 3 2023)]]></summary>
        <author>
            <name>Daniel Lemire</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing Co, a Small Language With Coroutines #4: Adding Channels]]></title>
        <id>https://abhinavsarkar.net/posts/implementing-co-4/?mtm_campaign=feed</id>
        <link href="https://abhinavsarkar.net/posts/implementing-co-4/?mtm_campaign=feed"/>
        <updated>2023-06-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>In the <a href="https://abhinavsarkar.net/posts/implementing-co-3/">previous post</a>, we added coroutines to <span class="fancy">Co</span>, the small language we are implementing in this series of posts. In this post, we add channels to it to be able to communicate between coroutines.</p>
<ol type="1">
<li><a href="https://abhinavsarkar.net/posts/implementing-co-1/">Implementing Co #1: The Parser</a></li>
<li><a href="https://abhinavsarkar.net/posts/implementing-co-2/">Implementing Co #2: The Interpreter</a></li>
<li><a href="https://abhinavsarkar.net/posts/implementing-co-3/">Implementing Co #3: Adding Coroutines</a></li>
<li>Implementing Co #4: Adding Channels</li>
<li>Implementing Co #5: Adding Sleep</li>
</ol>]]></summary>
        <author>
            <name>Posts on abhinavsarkar.net</name>
        </author>
    </entry>
</feed>