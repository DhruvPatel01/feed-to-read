{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/02/05/",
          "author": null,
          "description": "If you’ve spent much time developing with Mingw-w64 you’ve likely seen the\nsymbol ___chkstk_ms, perhaps in an error message. It’s a little piece of\nruntime provided by GCC via libgcc which ensures enough of the stack is\ncommitted for the caller’s stack frame. The “function” uses a custom ABI\nand is implemented in assembly. So is the subject of this article, a\nslightly improved implementation soon to be included in w64devkit as\nlibchkstk (-lchkstk).\nThe MSVC toolchain has an identical (x64) or similar (x86) function named\n__chkstk. We’ll discuss that as well, and w64devkit will include x86 and\nx64 implementations, useful when linking with MSVC object files. The new\nx86 __chkstk in particular is also better than the MSVC definition.\nA note on spelling: ___chkstk_ms is spelled with three unde…",
          "link": "https://nullprogram.com/blog/2024/02/05/",
          "publishedOn": "2024-02-05T17:56:05.000Z",
          "wordCount": 2683,
          "title": "An improved chkstk function on Windows",
          "imageUrl": null
        },
        {
          "id": "https://nullprogram.com/blog/2024/01/28/",
          "author": null,
          "description": "Over the past couple months I’ve discovered a couple of handy tricks for\nworking with GDB breakpoints. I figured these out on my own, and I’ve not\nseen either discussed elsewhere, so I really ought to share them.\nContinuable assertions\nThe assert macro in typical C implementations leaves a lot to be\ndesired, as does raise and abort, so I’ve suggested\nalternative definitions that behave better under debuggers:\n\n#define assert(c)  while (!(c)) __builtin_trap()\n#define assert(c)  while (!(c)) __builtin_unreachable()\n#define assert(c)  while (!(c)) *(volatile int *)0 = 0\n\n\nEach serves a slightly different purpose but still has the most\nimportant property: Immediately halt the program directly on the defect.\nNone have an occasionally useful secondary property: Optionally allow the\nprogram to co…",
          "link": "https://nullprogram.com/blog/2024/01/28/",
          "publishedOn": "2024-01-28T21:56:07.000Z",
          "wordCount": 1137,
          "title": "Two handy GDB breakpoint tricks",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Max Slater",
      "feedUrl": "https://thenumb.at/feed.xml",
      "siteUrl": "https://thenumb.at/",
      "articles": []
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/cba6c7ed49df",
          "author": "Netflix Technology Blog",
          "description": "Michael Lindon, Chris Sanden, Vache Shirikian, Yanjun Liu, Minal Mishra, Martin Tingley",
          "link": "https://netflixtechblog.com/sequential-a-b-testing-keeps-the-world-streaming-netflix-part-1-continuous-data-cba6c7ed49df?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-02-13T19:10:28.000Z",
          "wordCount": 5216,
          "title": "Sequential A/B Testing Keeps the World Streaming Netflix\nPart 1: Continuous Data",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1024/0*mK01JWbQB9QlCEsL"
        },
        {
          "id": "https://medium.com/p/37f9f88c152d",
          "author": "Netflix Technology Blog",
          "description": "by Moshe Kolodny",
          "link": "https://netflixtechblog.com/introducing-safetest-a-novel-approach-to-front-end-testing-37f9f88c152d?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-02-13T16:07:48.000Z",
          "wordCount": 4174,
          "title": "Introducing SafeTest: A Novel Approach to Front End Testing",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:995/1*OFmV3PX7Is8X48-V9ryeig.png"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": [
        {
          "id": "https://nim-lang.org//blog/2024/01/31/community-survey-results-2023.html",
          "author": null,
          "description": "The Nim community survey 2023 has been open for two months, and we have received 662 responses – we think this is a large enough sample to draw conclusions about our users and their habits.\nBefore we go into details, we would like to thank all the people who took the time to respond.\nWe really appreciate the feedback!\nThe goal of this survey was primarily to determine how our community is using Nim, in order to better understand how we should be improving it.\nDo you use Nim?\nBased on the answer to this question, the respondents were divided into two groups that each received a separate set of questions.\n\nApproximately three quarters of the respondents use Nim (33% frequently, 40% occasionally), while the remaining quarter is divided between people who never used Nim (10%) and people who st…",
          "link": "https://nim-lang.org//blog/2024/01/31/community-survey-results-2023.html",
          "publishedOn": "2024-01-31T00:00:00.000Z",
          "wordCount": 1186,
          "title": "Nim Community Survey 2023 Results",
          "imageUrl": "https://nim-lang.org/assets/img/twitter_banner.png"
        }
      ]
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2024/02/10/window-live-constant-time-grep.html",
          "author": null,
          "description": "In this post, I describe the design of window --- a small\ngrep-like utility I implemented in 500 lines of Rust. The utility itself is likely not that\ninteresting --- I bet some greybeared can implement an equivalent in 5 lines of bash. But the\ndesign principles behind it might be interesting --- this small utility manages to combine core\nideas of rust-analyzer and TigerBeetle!",
          "link": "https://matklad.github.io/2024/02/10/window-live-constant-time-grep.html",
          "publishedOn": "2024-02-10T00:00:00.000Z",
          "wordCount": 1610,
          "title": "Window: Live, Constant Time Grep",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": []
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": []
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=21112",
          "author": "Daniel Lemire",
          "description": "Intel has release a new generation of server processors (Sapphire Rapids) while the latest AMD technology (Zen 4) is now broadly available. There are extensive comparisons available. Of particular interest is the open benchmark results which assess various aspects of processor speeds, including JSON parsing performance. In these benchmarks, AMD systems appear to dominate. I … Continue reading JSON Parsing: Intel Sapphire Rapids versus AMD Zen 4",
          "link": "https://lemire.me/blog/2024/02/09/json-parsing-intel-sapphire-rapids-versus-amd-zen-4/",
          "publishedOn": "2024-02-09T19:57:29.000Z",
          "wordCount": 3389,
          "title": "JSON Parsing: Intel Sapphire Rapids versus AMD Zen 4",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=21109",
          "author": "Daniel Lemire",
          "description": "A hash function maps values (e.g., strings) into a fixed number of strings, typically smaller than the original. It is useful to compare quickly two long strings, for example. Instead of comparing the strings, you may compare the hash values. A simple hash function consists in repeatedly multiplying the hash value by some constant B … Continue reading How fast is rolling Karp-Rabin hashing?",
          "link": "https://lemire.me/blog/2024/02/04/how-fast-is-rolling-karp-rabin-hashing/",
          "publishedOn": "2024-02-04T20:29:59.000Z",
          "wordCount": 3759,
          "title": "How fast is rolling Karp-Rabin hashing?",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=21097",
          "author": "Daniel Lemire",
          "description": "One of the established and most popular programming languages is the C programming language. It is relatively easy to learn, and highly practical. Maybe surprisingly, the C programming language keeps evolving, slowly and carefully. If you have GCC 13 or LLVM (Clang) 16, you already have a compiler with some of the features from the … Continue reading C23: a slightly better C",
          "link": "https://lemire.me/blog/2024/01/21/c23-a-slightly-better-c/",
          "publishedOn": "2024-01-21T19:20:10.000Z",
          "wordCount": 5818,
          "title": "C23: a slightly better C",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": [
        {
          "id": "https://www.devever.net/~hl/bootstrapping-exam",
          "author": null,
          "description": "<div type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p xmlns=\"http://www.w3.org/1999/xhtml\">The following is an “exam”. To my knowledge, nobody has ever passed it, as it\nis an  difficult challenge. But I am firmly convinced it is\npossible, and it makes for an interesting discussion.<em>extremely</em></p></div></div>",
          "link": "https://www.devever.net/~hl/bootstrapping-exam",
          "publishedOn": "2024-02-04T11:37:00.000Z",
          "wordCount": 1576,
          "title": "[Computing] The Bootstrapping Exam: Escaping from “Trusting Trust”",
          "imageUrl": null
        },
        {
          "id": "https://www.devever.net/~hl/u/202402#03a",
          "author": null,
          "description": "<div type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><ul><li><a href=\"https://media.ccc.de/v/37c3-11781-adventures_in_reverse_engineering_broadcom_nic_firmware\">37C3 talk recording: Adventures in Reverse Engineering Broadcom NIC Firmware</a></li></ul><p xmlns=\"http://www.w3.org/1999/xhtml\">For those that missed it, a recording of my talk at 37C3 can be found here.</p></div></div>",
          "link": "https://www.devever.net/~hl/u/202402#03a",
          "publishedOn": "2024-02-03T07:31:16.000Z",
          "wordCount": 49,
          "title": "[Hμblog] 37C3 talk recording: Adventures in Reverse Engineering Broadcom NIC Firmware",
          "imageUrl": null
        },
        {
          "id": "https://www.devever.net/~hl/traintoilet",
          "author": null,
          "description": "<div type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p xmlns=\"http://www.w3.org/1999/xhtml\">The other day I rode on a Class 800 train in the UK. This is the “Intercity\nExpress” train designed to replace the venerable HST (Intercity 125 with Mark 3\ncoaches, a train of which I have many memories and which I will dearly miss).</p></div></div>",
          "link": "https://www.devever.net/~hl/traintoilet",
          "publishedOn": "2024-01-28T09:08:00.000Z",
          "wordCount": 867,
          "title": "[Computing] I hacked a train toilet",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}