{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/12/20/",
          "author": null,
          "description": "GCC and Clang inline assembly is an interface between high and low level\nprogramming languages. It is subtle and treacherous. Many are ensnared in\nits traps, usually unknowingly. As such, the asm keyword is essentially\nthe unsafe keyword of C and C++. Nearly every inline assembly tutorial,\nincluding the awful ibilio page at the top of search engines for\ndecades, propagate fundamental, serious mistakes, and most examples are\nincorrect. The dangerous part is that the examples usually produce the\nexpected results! The situation is dire. This article isn’t a tutorial,\nbut basic rules to avoid the most common mistakes, or to spot them in code\nreview.\nThe focus is entirely extended assembly, and not basic assembly,\nwhich has different rules. The former is any inline assembly statement\nwith const…",
          "link": "https://nullprogram.com/blog/2024/12/20/",
          "publishedOn": "2024-12-20T19:46:48.000Z",
          "wordCount": 1151,
          "title": "Rules to avoid common extended inline assembly mistakes",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/d2fb8e9ba1c6",
          "author": "Netflix Technology Blog",
          "description": "David J. Berg*, David Casler^, Romain Cledat*, Qian Huang*, Rui Lin*, Nissan Pow*, Nurcan Sonmez*, Shashank Srikanth*, Chaoying Wang*…",
          "link": "https://netflixtechblog.com/introducing-configurable-metaflow-d2fb8e9ba1c6?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-20T07:11:37.000Z",
          "wordCount": 6583,
          "title": "Introducing Configurable Metaflow",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:1143/1*XrOVl25ZLx8_4nHLRxNgDg.png"
        },
        {
          "id": "https://medium.com/p/d761cfd551ee",
          "author": "Netflix Technology Blog",
          "description": "This article is the first in a multi-part series sharing a breadth of Analytics Engineering work at Netflix, recently presented as part of…",
          "link": "https://netflixtechblog.com/part-1-a-survey-of-analytics-engineering-work-at-netflix-d761cfd551ee?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-17T23:26:37.000Z",
          "wordCount": 3797,
          "title": "Part 1: A Survey of Analytics Engineering Work at Netflix",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:625/0*gUgNHuu6yqKdfbgg"
        },
        {
          "id": "https://medium.com/p/f2a142955f83",
          "author": "Netflix Technology Blog",
          "description": "By J Han, Pallavi Phadnis",
          "link": "https://netflixtechblog.com/cloud-efficiency-at-netflix-f2a142955f83?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-17T22:17:29.000Z",
          "wordCount": 2803,
          "title": "Cloud Efficiency at Netflix",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*vDQJiJUttlRSpVBo"
        },
        {
          "id": "https://medium.com/p/c88c586629eb",
          "author": "Netflix Technology Blog",
          "description": "Part 1: Understanding The Challenges",
          "link": "https://netflixtechblog.com/title-launch-observability-at-netflix-scale-c88c586629eb?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-17T21:54:37.000Z",
          "wordCount": 2936,
          "title": "Title Launch Observability at Netflix Scale",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*5F9ATQbyOp99jMwJ"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": [
        {
          "id": "https://nim-lang.org//blog/2024/12/24/nim-2014-released.html",
          "author": null,
          "description": "The Nim team is happy to announce Nim version 2.0.14, our seventh patch release for Nim 2.0,\nfor our users who haven’t switched yet to Nim 2.2.\nVersion 2.0.14 contains 40 commits, and it brings several improvements to Nim 2.0.12, released two months ago.\nInstalling Nim 2.0.14\nIf you have installed a previous version of Nim using choosenim,\ngetting Nim 2.0.14 is as easy as:\n$ choosenim update self\n$ choosenim 2.0.14\n\nMake sure that the version of choosenim you have installed is 0.8.5 or higher, otherwise visit choosenim’s repo and see there how to re-install it first, before updating Nim.\nAlternatively, you can download Nim 2.0.14 from\nour nightlies builds.\nNim Community Survey 2024\nWe would like to remind you about Nim Community Survey.\nIf you haven’t participated yet, now’s the time.\nIt shouldn’t take more than 5 minutes, and it helps us to make Nim better.\nBugfixes\nThese reported issues were fixed:\nFixed “ensureMove usage leading to memory leak for JsonNode !”\n(#24504)\nFixed “UB calling allocCStringArray([\"\"]) with --mm:refc”\n(#22153)\nFixed “Regression when using generic type with Table/OrderedTable”\n(#23233)\nFixed “Wrong C code generated for newSeqWith when initializing two variables”\n(#18104)\nFixed “Wrong behaviour when wrapping a constant  object variant into a sequence at runtime”\n(#23295)\nFixed “Invalid C code generated for lent array in tuple”\n(#24034)\nFixed “Seg fault when adding deque element”\n(#24319)\nFixed “C compiler error when default initializing an object field function when the default function is overloaded”\n(#23545)\nFixed “build failed for lib/pure/selectors via mingw”\n(#24371)\nFixed “Calling proc with nested ref/deref constructed object results in invalid generated code”\n(#18081)\nFixed “let symbol created by template is reused in nimvm branch “\n(#24472)\nFixed “building nimble 0.16.4 fails when running build_all.sh”\n(#24536)\nThe complete list of changes is available\nhere.",
          "link": "https://nim-lang.org//blog/2024/12/24/nim-2014-released.html",
          "publishedOn": "2024-12-24T00:00:00.000Z",
          "wordCount": 442,
          "title": "Nim version 2.0.14 released",
          "imageUrl": "https://nim-lang.org/assets/img/twitter_banner.png"
        },
        {
          "id": "https://nim-lang.org//blog/2024/12/09/community-survey-2024.html",
          "author": null,
          "description": "We are proud to announce the launch of the official\n2024 Nim Community Survey!\nNo matter whether you use Nim today, have used Nim previously, or never used Nim before;\nwe want to know your opinions.\nYour feedback will help the Nim project understand its strengths and\nweaknesses, and to determine development priorities for the future.\nIt shouldn’t take you much longer than 5 minutes to complete this survey.\nSubmissions will be accepted until the start of 2025, depending on the\nresponse rates.\nIf you have any questions or feedback, please don’t hesitate\nto get in touch with us via email at survey@nim-lang.org or on the\nNim Forum.\nThis is now the eight year in which this survey has been running.\nAn analysis of the results for the past years can be found at the following links:\n2016\n2017\n2018\n2019\n2020\n2021\n2023\nWe would appreciate your help in spreading the word about this survey.\nShare the Google Forms link on your social network feeds, with your colleagues\nand in other communities.\nOnce the submission period ends, the results will be shown here and publicized\nvia the Nim Forum.\nThanks for your time!",
          "link": "https://nim-lang.org//blog/2024/12/09/community-survey-2024.html",
          "publishedOn": "2024-12-09T00:00:00.000Z",
          "wordCount": 346,
          "title": "Launching the 2024 Nim Community Survey",
          "imageUrl": "https://nim-lang.org/assets/img/twitter_banner.png"
        }
      ]
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2024/12/24/minimal-version-selection-revisited.html",
          "author": null,
          "description": "In this post, I want to highlight one aspect of Go-style minimal version selection that I have\nmissed completely at first. Maybe you missed it too?",
          "link": "https://matklad.github.io/2024/12/24/minimal-version-selection-revisited.html",
          "publishedOn": "2024-12-24T00:00:00.000Z",
          "wordCount": 1320,
          "title": "Minimal Version Selection Revisited",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/12/13/majjit-lsp.html",
          "author": null,
          "description": "An out-there suggestion for the nascent jj ecosystem!",
          "link": "https://matklad.github.io/2024/12/13/majjit-lsp.html",
          "publishedOn": "2024-12-13T00:00:00.000Z",
          "wordCount": 1475,
          "title": "Majjit LSP",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": [
        {
          "id": "https://samwho.dev/turing-machines/",
          "author": null,
          "description": "body {\n    text-wrap: pretty;\n  }\n\n  @media (prefers-reduced-motion: reduce) {\n    * {\n      transition: none;\n      animation: none;\n    }\n  }\n\n  turing-machine {\n    width: 100%;\n    display: block;\n    position: relative;\n    padding-bottom: 1em;\n  }\n\n  turing-machine .program-container {\n    position: relative;\n    display: flex;\n    justify-content: center;\n  }\n\n  turing-machine table {\n    border: none;\n    font-family: Fira Code;\n    border-collapse: collapse;\n    border-spacing: 0;\n    margin: 1px;\n    margin-top: 0.5em;\n    width: auto;\n  }\n\n  turing-machine thead td {\n    text-align: center;\n  }\n\n  turing-machine td {\n    text-align: left;\n    padding-left: 3vw;\n    padding-right: 3vw;\n    padding-top: 0.2em;\n    padding-bottom: 0.2em;\n    border: 1px dashed #bbbbbb;\n  }\n\n  turin…",
          "link": "https://samwho.dev/turing-machines/",
          "publishedOn": "2024-12-20T00:00:00.000Z",
          "wordCount": 4371,
          "title": "Turing Machines",
          "imageUrl": "https://samwho.dev/images/turing-machines-og.png?h=6567026e8884fb88a389"
        }
      ]
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": []
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": []
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}