{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/02/05/",
          "author": null,
          "description": "If you’ve spent much time developing with Mingw-w64 you’ve likely seen the\nsymbol ___chkstk_ms, perhaps in an error message. It’s a little piece of\nruntime provided by GCC via libgcc which ensures enough of the stack is\ncommitted for the caller’s stack frame. The “function” uses a custom ABI\nand is implemented in assembly. So is the subject of this article, a\nslightly improved implementation soon to be included in w64devkit as\nlibchkstk (-lchkstk).\nThe MSVC toolchain has an identical (x64) or similar (x86) function named\n__chkstk. We’ll discuss that as well, and w64devkit will include x86 and\nx64 implementations, useful when linking with MSVC object files. The new\nx86 __chkstk in particular is also better than the MSVC definition.\nA note on spelling: ___chkstk_ms is spelled with three unde…",
          "link": "https://nullprogram.com/blog/2024/02/05/",
          "publishedOn": "2024-02-05T17:56:05.000Z",
          "wordCount": 2795,
          "title": "An improved chkstk function on Windows",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Max Slater",
      "feedUrl": "https://thenumb.at/feed.xml",
      "siteUrl": "https://thenumb.at/",
      "articles": []
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/6a727c1ae2e5",
          "author": "Netflix Technology Blog",
          "description": "By Jose Fernandez",
          "link": "https://netflixtechblog.com/announcing-bpftop-streamlining-ebpf-performance-optimization-6a727c1ae2e5?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-02-26T16:43:30.000Z",
          "wordCount": 1371,
          "title": "Announcing bpftop: Streamlining eBPF performance optimization",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1200/1*hLvLcNDb6RljixhN8la-lg.gif"
        },
        {
          "id": "https://medium.com/p/cba6c7ed49df",
          "author": "Netflix Technology Blog",
          "description": "Michael Lindon, Chris Sanden, Vache Shirikian, Yanjun Liu, Minal Mishra, Martin Tingley",
          "link": "https://netflixtechblog.com/sequential-a-b-testing-keeps-the-world-streaming-netflix-part-1-continuous-data-cba6c7ed49df?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-02-13T19:10:28.000Z",
          "wordCount": 5216,
          "title": "Sequential A/B Testing Keeps the World Streaming Netflix\nPart 1: Continuous Data",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1024/0*mK01JWbQB9QlCEsL"
        },
        {
          "id": "https://medium.com/p/37f9f88c152d",
          "author": "Netflix Technology Blog",
          "description": "by Moshe Kolodny",
          "link": "https://netflixtechblog.com/introducing-safetest-a-novel-approach-to-front-end-testing-37f9f88c152d?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-02-13T16:07:48.000Z",
          "wordCount": 4174,
          "title": "Introducing SafeTest: A Novel Approach to Front End Testing",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:995/1*OFmV3PX7Is8X48-V9ryeig.png"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": []
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2024/03/02/Kafka-vs-Nabokov.html",
          "author": null,
          "description": "Uplifting a lobste.rs comment to a stand-alone post.",
          "link": "https://matklad.github.io/2024/03/02/Kafka-vs-Nabokov.html",
          "publishedOn": "2024-03-02T00:00:00.000Z",
          "wordCount": 972,
          "title": "Kafka versus Nabokov",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/02/10/window-live-constant-time-grep.html",
          "author": null,
          "description": "In this post, I describe the design of window --- a small\ngrep-like utility I implemented in 500 lines of Rust. The utility itself is likely not that\ninteresting --- I bet some greybeared can implement an equivalent in 5 lines of bash. But the\ndesign principles behind it might be interesting --- this small utility manages to combine core\nideas of rust-analyzer and TigerBeetle!",
          "link": "https://matklad.github.io/2024/02/10/window-live-constant-time-grep.html",
          "publishedOn": "2024-02-10T00:00:00.000Z",
          "wordCount": 1610,
          "title": "Window: Live, Constant Time Grep",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": [
        {
          "id": "https://samwho.dev/bloom-filters/",
          "author": null,
          "description": ".bf {\n  width: 100%;\n  height: 150px;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 479px) {\n  .bf {\n    height: 200px;\n  }\n}\n\n@media only screen and (min-width: 480px) and (max-width: 676px) {\n  .bf {\n    height: 200px;\n  }\n }\n\n@media only screen and (min-width: 677px) and (max-width: 991px) {\n  .bf {\n    height: 150px;\n  }\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: stretch;\n}\n\ninput {\n    border: 1px solid rgb(119, 119, 119);\n    padding: 0.25rem;\n    border-radius: 0.25rem;\n    height: 2em;\n    line-height: 2em;\n}\n\n.aside {\n  padding: 2rem;\n  width: 100vw;\n  position: relative;\n  margin-left: -50vw;\n  left: 50%;\n  background-color: #eeeeee;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.aside > * …",
          "link": "https://samwho.dev/bloom-filters/",
          "publishedOn": "2024-02-19T00:00:00.000Z",
          "wordCount": 3118,
          "title": "Bloom Filters",
          "imageUrl": "https://samwho.dev/images/bloom-filters.png?h=92a20de28f9c649be1ad"
        }
      ]
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": []
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=21135",
          "author": "Daniel Lemire",
          "description": "When I was young, science fiction was the genre of choice for many engineers and scientists. But the genre declined significantly in recent years. Part of the problem is the rise dystopian fiction. In the imagined future, we are no longer conquering space or developing new fantastic technologies, but rather, increasingly, battling the consequences of … Continue reading Book review: Theft of Fire by Devon Eriksen",
          "link": "https://lemire.me/blog/2024/02/24/book-review-theft-of-fire-by-devon-eriksen/",
          "publishedOn": "2024-02-24T18:35:03.000Z",
          "wordCount": 3851,
          "title": "Book review: Theft of Fire by Devon Eriksen",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=21126",
          "author": "Daniel Lemire",
          "description": "Modern processor have fancy instructions that can do many operations at one using wide registers: SIMD instructions. Intel and AMD have 512-bit registers and associated instructions under AVX-512. You expect these instructions to use more power, more energy. However, they get the job done faster. Do you save energy overall? You should expect so. Let … Continue reading Measuring energy usage: regular code vs. SIMD code",
          "link": "https://lemire.me/blog/2024/02/19/measuring-energy-usage-regular-code-vs-simd-code/",
          "publishedOn": "2024-02-19T21:39:32.000Z",
          "wordCount": 4085,
          "title": "Measuring energy usage: regular code vs. SIMD code",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=21112",
          "author": "Daniel Lemire",
          "description": "Intel has release a new generation of server processors (Sapphire Rapids) while the latest AMD technology (Zen 4) is now broadly available. There are extensive comparisons available. Of particular interest is the open benchmark results which assess various aspects of processor speeds, including JSON parsing performance. In these benchmarks, AMD systems appear to dominate. I … Continue reading JSON Parsing: Intel Sapphire Rapids versus AMD Zen 4",
          "link": "https://lemire.me/blog/2024/02/09/json-parsing-intel-sapphire-rapids-versus-amd-zen-4/",
          "publishedOn": "2024-02-09T19:57:29.000Z",
          "wordCount": 3780,
          "title": "JSON Parsing: Intel Sapphire Rapids versus AMD Zen 4",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=21109",
          "author": "Daniel Lemire",
          "description": "A hash function maps values (e.g., strings) into a fixed number of strings, typically smaller than the original. It is useful to compare quickly two long strings, for example. Instead of comparing the strings, you may compare the hash values. A simple hash function consists in repeatedly multiplying the hash value by some constant B … Continue reading How fast is rolling Karp-Rabin hashing?",
          "link": "https://lemire.me/blog/2024/02/04/how-fast-is-rolling-karp-rabin-hashing/",
          "publishedOn": "2024-02-04T20:29:59.000Z",
          "wordCount": 3766,
          "title": "How fast is rolling Karp-Rabin hashing?",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": [
        {
          "id": "https://www.devever.net/~hl/bootstrapping-exam",
          "author": null,
          "description": "<div type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p xmlns=\"http://www.w3.org/1999/xhtml\">The following is an “exam”. To my knowledge, nobody has ever passed it, as it\nis an  difficult challenge. But I am firmly convinced it is\npossible, and it makes for an interesting discussion.<em>extremely</em></p></div></div>",
          "link": "https://www.devever.net/~hl/bootstrapping-exam",
          "publishedOn": "2024-02-04T11:37:00.000Z",
          "wordCount": 1576,
          "title": "[Computing] The Bootstrapping Exam: Escaping from “Trusting Trust”",
          "imageUrl": null
        },
        {
          "id": "https://www.devever.net/~hl/u/202402#03a",
          "author": null,
          "description": "<div type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><ul><li><a href=\"https://media.ccc.de/v/37c3-11781-adventures_in_reverse_engineering_broadcom_nic_firmware\">37C3 talk recording: Adventures in Reverse Engineering Broadcom NIC Firmware</a></li></ul><p xmlns=\"http://www.w3.org/1999/xhtml\">For those that missed it, a recording of my talk at 37C3 can be found here.</p></div></div>",
          "link": "https://www.devever.net/~hl/u/202402#03a",
          "publishedOn": "2024-02-03T07:31:16.000Z",
          "wordCount": 49,
          "title": "[Hμblog] 37C3 talk recording: Adventures in Reverse Engineering Broadcom NIC Firmware",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}