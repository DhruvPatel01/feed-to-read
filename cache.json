{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/04/14/",
          "author": null,
          "description": "My techniques with arena allocation and strings are\noriented around C. I’m always looking for a better way, and lately I’ve\nbeen experimenting with building them using C++ features. What are the\ntrade-offs? Are the benefits worth the costs? In this article I lay out my\ngoals, review implementation possibilities, and discuss my findings.\nFollowing along will require familiarity with those previous two articles.\nSome of C++ is beyond my mental capabilities, and so I cannot wield those\nparts effectively. Other parts I can wrap my head around, but it\nrequires substantial effort and the inevitable mistakes are difficult to\ndebug. So a general goal is to minimize contact with that complexity, only\ntouching a few higher-value features that I can use confidently.\nExisting practice is unimportant. …",
          "link": "https://nullprogram.com/blog/2024/04/14/",
          "publishedOn": "2024-04-14T00:39:18.000Z",
          "wordCount": 2002,
          "title": "Speculations on arenas and custom strings in C++",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Max Slater",
      "feedUrl": "https://thenumb.at/feed.xml",
      "siteUrl": "https://thenumb.at/",
      "articles": [
        {
          "id": "https://thenumb.at/Puerto-Rico/",
          "author": null,
          "description": "Río Grande, Puerto Rico, 2024",
          "link": "https://thenumb.at/Puerto-Rico/",
          "publishedOn": "2024-04-06T00:00:00.000Z",
          "wordCount": 48,
          "title": "Puerto Rico",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/946b9b3cd300",
          "author": "Netflix Technology Blog",
          "description": "Liwei Guo, Vinicius Carvalho, Anush Moorthy, Aditya Mavlankar, Lishan Zhu",
          "link": "https://netflixtechblog.com/the-making-of-ves-the-cosmos-microservice-for-netflix-video-encoding-946b9b3cd300?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-04-09T22:12:32.000Z",
          "wordCount": 5878,
          "title": "The Making of VES: the Cosmos Microservice for Netflix Video Encoding",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*7n3hN3lYhe89Ezk6"
        },
        {
          "id": "https://medium.com/p/222ac5d23576",
          "author": "Netflix Technology Blog",
          "description": "By Ricky Gardiner, Alex Hutter, and Katie Lefevre",
          "link": "https://netflixtechblog.com/reverse-searching-netflixs-federated-graph-222ac5d23576?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-04-04T21:26:42.000Z",
          "wordCount": 4292,
          "title": "Reverse Searching Netflix’s Federated Graph",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:1200/1*GCZRoNqT8seObcUFzYthXg.png"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": [
        {
          "id": "https://nim-lang.org//blog/2024/04/16/versions-1620-204-released.html",
          "author": null,
          "description": "The Nim team is happy to announce two releases:\nthe latest Nim, version 2.0.4\nLTS release, version 1.6.20\nFor the majority of our users, v2.0.4 contains 23 commits and brings bugfixes and improvements to Nim 2.0.2, released four months ago.\nFor those users who haven’t switched to Nim v2.0 yet, we have released the ninth patch release for Nim 1.6.x.\nIt is a small release with 13 commits.\nInstalling Nim 2.0.4\nNew users\nCheck out if the package manager of your OS already ships version 2.0.4 or\ninstall it as described here.\nExisting users\nIf you have installed a previous version of Nim using choosenim,\ngetting Nim 2.0.4 is as easy as:\n$ choosenim 2.0.4\n\nIf you are on OSX ARM, choosenim will not work for you.\nPlease choose an alternative method of installing or updating.\nAlternatively, you can …",
          "link": "https://nim-lang.org//blog/2024/04/16/versions-1620-204-released.html",
          "publishedOn": "2024-04-16T00:00:00.000Z",
          "wordCount": 531,
          "title": "Versions 2.0.4 and 1.6.20 released",
          "imageUrl": "https://nim-lang.org/assets/img/twitter_banner.png"
        }
      ]
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": []
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": []
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": [
        {
          "id": "https://notes.abhinavsarkar.net/2024/links-04",
          "author": null,
          "description": "<p>Here are some interesting things I recently read on the internet:</p>\n\n<ul>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://blog.brycekerley.net/2024/04/01/p-langs.html\">A lazy and flippant classification of programming languages</a> <br />\nBryce Kerley classifies some popular programming languages into categories with single letter names, with hilarious effects.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://benhoyt.com/writings/go-1brc/\">The One Billion Row Challenge in Go: from 1m45s to 3.4s in nine solutions</a> <br />\nBen Hoyt optimizes a Golang program to be thirty times faster.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://tonsky.me/blog/js-bloat/\">JavaScript Bloat in 2024</a> <br />\nNikita Prokopov gets in touch with modern front-end development, and hates how bloated everything is.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://andrewkelley.me/post/why-we-cant-have-nice-software.html\">Why We Can’t Have Nice Software</a> <br />\nAndrew Kelley muses about the bad state of current software, and attributes it to human greed.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://tratt.net/laurie/blog/2024/faster_shell_startup_with_shell_switching.html\">Faster Shell Startup With Shell Switching</a> <br />\nLaurence Tratt uses profiling to figure out a trick to start shells faster.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://buttondown.email/hillelwayne/archive/when-would-you-ever-want-bubblesort/\">When would you ever want bubblesort?</a> <br />\nHillel Wayne finally finds the answer to the age-old oft-asked question.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://vfoley.xyz/parsing/\">You already know how to parse by hand</a> <br />\nVincent Foley lets you know how to parse by hand, but then you already knew that.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://compiler.club/compiling-lambda-calculus/\">Compiling Lambda Calculus</a> <br />\nColin James compiles Lambda Calculus to LLVM IR, for fun and no profit.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://dubroy.com/blog/three-ways-of-handling-user-input\">Three ways of handling user input</a> <br />\nPatrick Dubroy surveys different ways of handling user input: callbacks, polling and magic.</p>\n  </li>\n  <li>\n    <p><a href=\"https://web.archive.org/web/3/https://hirrolot.github.io/posts/why-static-languages-suffer-from-complexity.html\">Why Static Languages Suffer From Complexity</a> <br />\nTima Kinsart argues that statically typed languages are complex because metaprogramming them is hard.</p>\n  </li>\n</ul>\n\n<p>Like, share, or comment on this post on <a href=\"https://fantastic.earth/@abnv/112281600001282969\" class=\"mastodon-link\">Mastodon</a>.</p>",
          "link": "https://notes.abhinavsarkar.net/2024/links-04",
          "publishedOn": "2024-04-16T00:00:00.000Z",
          "wordCount": 534,
          "title": "Interesting Links for April 2024",
          "imageUrl": null
        },
        {
          "id": "https://abhinavsarkar.net/posts/compiling-aoc23-aplenty/?mtm_campaign=feed",
          "author": null,
          "description": "<p>Every year I try to solve some problems from the <a href=\"https://adventofcode.com\" target=\"_blank\" rel=\"noopener\">Advent of Code</a> (AoC) competition in a <a href=\"https://abhinavsarkar.net/posts/type-level-haskell-aoc7/\">not</a> <a href=\"https://notes.abhinavsarkar.net/2022/type-level-rps\" target=\"_blank\" rel=\"noopener\">straightforward</a> <a href=\"https://abhinavsarkar.net/posts/parsers-zippers-interpreters-aoc7/\">way</a>. Let’s solve the part one of the day 19 problem <a href=\"https://adventofcode.com/2023/day/19\" target=\"_blank\" rel=\"noopener\">Aplenty</a> by compiling the problem input to an executable file.</p>",
          "link": "https://abhinavsarkar.net/posts/compiling-aoc23-aplenty/?mtm_campaign=feed",
          "publishedOn": "2024-04-07T00:00:00.000Z",
          "wordCount": 4735,
          "title": "Solving Advent of Code ’23 “Aplenty” by Compiling",
          "imageUrl": "https://abhinavsarkar.net/images/compiling-aoc23-aplenty/preview.png"
        }
      ]
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=21288",
          "author": "Daniel Lemire",
          "description": "Software can beat human beings at most games… from Chess to Go, and even poker. Large language models like GPT-4 offered through services such as ChatGPT allow us to solve a new breed of problems. GPT-4 can beat 90% of human beings at the bar exam. Artificial intelligence can match math Olympians. The primary skills … Continue reading Large language models (e.g., ChatGPT) as research assistants",
          "link": "https://lemire.me/blog/2024/04/27/large-language-models-e-g-chatgpt-as-research-assistants/",
          "publishedOn": "2024-04-27T00:05:24.000Z",
          "wordCount": 3503,
          "title": "Large language models (e.g., ChatGPT) as research assistants",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21278",
          "author": "Daniel Lemire",
          "description": "Go back to the roots: experience. An expert is someone who has repeatedly solved the concrete problem you are encountering. If your toilet leaks, an experienced plumber is an expert. An expert has a track record and has had to face the consequences of their work. Failing is part of what makes an expert: any … Continue reading How do you recognize an expert?",
          "link": "https://lemire.me/blog/2024/04/21/how-do-you-recognize-an-expert/",
          "publishedOn": "2024-04-21T17:35:28.000Z",
          "wordCount": 3195,
          "title": "How do you recognize an expert?",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21272",
          "author": "Daniel Lemire",
          "description": "Suppose that you receive a long string and you need to break it down into lines. Consider the simplified problems where you need to break the string into segments of (say) 72 characters. It is a relevant problem if your string is a base64 string or a Fortran formatted statement. The problem could be a … Continue reading How quickly can you break a long string into lines?",
          "link": "https://lemire.me/blog/2024/04/19/how-quickly-can-you-break-a-long-string-into-lines/",
          "publishedOn": "2024-04-19T21:25:21.000Z",
          "wordCount": 3385,
          "title": "How quickly can you break a long string into lines?",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21254",
          "author": "Daniel Lemire",
          "description": "Our computer hardware exchange data using a standard called PCI Express. Your disk, your network and your GPU are limited by what PCI Express can do. Currently, it means that you are limited to a few gigabytes per second of bandwidth. PCI Express is about to receive a big performance boost in 2025 when PCI … Continue reading Science and Technology links (April 13 2024)",
          "link": "https://lemire.me/blog/2024/04/13/science-and-technology-links-april-13-2024/",
          "publishedOn": "2024-04-13T22:31:25.000Z",
          "wordCount": 3115,
          "title": "Science and Technology links (April 13 2024)",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21250",
          "author": "Daniel Lemire",
          "description": "We sometimes need to find the greatest common divisor between two integers in software. The fastest way to compute the greatest common divisor might be the binary Euclidean algorithm. In C++20, it can be implemented generically as follows: template <typename int_type> int_type binary_gcd(int_type u, int_type v) { if (u == 0) { return v; } … Continue reading Greatest common divisor,  the extended Euclidean algorithm, and speed!",
          "link": "https://lemire.me/blog/2024/04/13/greatest-common-divisor-the-extended-euclidean-algorithm-and-speed/",
          "publishedOn": "2024-04-13T20:56:11.000Z",
          "wordCount": 4192,
          "title": "Greatest common divisor,  the extended Euclidean algorithm, and speed!",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21244",
          "author": "Daniel Lemire",
          "description": "A reader asked me for some help in computing (1 – sqrt(0.5)) to an arbitrary precision, from scratch. A simpler but equivalent problem is to compute the square root of an integer (e.g., 2). There are many sophisticated algorithms for such problems, but we want something relatively simple. We’d like to compute the square root … Continue reading A simple algorithm to compute the square root of an integer, byte by byte",
          "link": "https://lemire.me/blog/2024/04/11/a-simple-algorithm-to-compute-the-square-root-of-an-integer-byte-by-byte/",
          "publishedOn": "2024-04-11T19:39:11.000Z",
          "wordCount": 3137,
          "title": "A simple algorithm to compute the square root of an integer, byte by byte",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21209",
          "author": "Daniel Lemire",
          "description": "Last year, I looked at writing small “hello world” web applications in various programming languages (Go, JavaScript, Nim…). Go, using nothing but the standard library, did well. In these benchmarks, I am just programming an HTTP route that returns a small string (e.g., ‘hello world’). The query is from the host itself. The intent behind … Continue reading C++ web app with Crow: early scalability results",
          "link": "https://lemire.me/blog/2024/04/06/c-web-app-with-crow-early-scalability-results/",
          "publishedOn": "2024-04-06T22:01:26.000Z",
          "wordCount": 4555,
          "title": "C++ web app with Crow: early scalability results",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21191",
          "author": "Daniel Lemire",
          "description": "Large language models (e.g., ChatGPT) do better at legal questions than lawyers: Our empirical analysis benchmarks LLMs against a ground truth set by Senior Lawyers, uncovering that advanced models match or exceed human accuracy in determining legal issues (Martin et al.). Gene therapy-mediated partial reprogramming extends lifespan and reverses age-related changes in aged mice. Increased … Continue reading Science and Technology links (March 31 2024)",
          "link": "https://lemire.me/blog/2024/03/31/science-and-technology-links-march-31-2024/",
          "publishedOn": "2024-03-31T21:24:30.000Z",
          "wordCount": 3680,
          "title": "Science and Technology links (March 31 2024)",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21187",
          "author": "Daniel Lemire",
          "description": "Sometimes you need to filter out or filter in data quickly. Suppose that your employer maintains a list of forbidden passwords or URLs or words. You may store them in a relational database and query them as needed. Unfortunately, this process can be slow and inefficient. A better approach might be to use a probabilistic … Continue reading Fast and concise probabilistic filters in Python",
          "link": "https://lemire.me/blog/2024/03/31/fast-and-concise-probabilistic-filters-in-python/",
          "publishedOn": "2024-03-31T18:00:55.000Z",
          "wordCount": 3355,
          "title": "Fast and concise probabilistic filters in Python",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": []
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}