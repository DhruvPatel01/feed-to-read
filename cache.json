{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/04/14/",
          "author": null,
          "description": "My techniques with arena allocation and strings are\noriented around C. I’m always looking for a better way, and lately I’ve\nbeen experimenting with building them using C++ features. What are the\ntrade-offs? Are the benefits worth the costs? In this article I lay out my\ngoals, review implementation possibilities, and discuss my findings.\nFollowing along will require familiarity with those previous two articles.\nSome of C++ is beyond my intellectual capabilities, and so I cannot wield\nthose parts effectively. Other parts I can wrap my head around, but it\nrequires substantial effort and the inevitable mistakes are difficult to\ndebug. So a general goal is to minimize contact with that complexity, only\ntouching a few higher-value features that I can use confidently.\nExisting practice is unimpor…",
          "link": "https://nullprogram.com/blog/2024/04/14/",
          "publishedOn": "2024-04-14T00:39:18.000Z",
          "wordCount": 1816,
          "title": "Speculations on arenas and custom strings in C++",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Max Slater",
      "feedUrl": "https://thenumb.at/feed.xml",
      "siteUrl": "https://thenumb.at/",
      "articles": [
        {
          "id": "https://thenumb.at/Puerto-Rico/",
          "author": null,
          "description": "Río Grande, Puerto Rico, 2024",
          "link": "https://thenumb.at/Puerto-Rico/",
          "publishedOn": "2024-04-06T00:00:00.000Z",
          "wordCount": 48,
          "title": "Puerto Rico",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/946b9b3cd300",
          "author": "Netflix Technology Blog",
          "description": "Liwei Guo, Vinicius Carvalho, Anush Moorthy, Aditya Mavlankar, Lishan Zhu",
          "link": "https://netflixtechblog.com/the-making-of-ves-the-cosmos-microservice-for-netflix-video-encoding-946b9b3cd300?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-04-09T22:12:32.000Z",
          "wordCount": 5878,
          "title": "The Making of VES: the Cosmos Microservice for Netflix Video Encoding",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*7n3hN3lYhe89Ezk6"
        },
        {
          "id": "https://medium.com/p/222ac5d23576",
          "author": "Netflix Technology Blog",
          "description": "By Ricky Gardiner, Alex Hutter, and Katie Lefevre",
          "link": "https://netflixtechblog.com/reverse-searching-netflixs-federated-graph-222ac5d23576?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-04-04T21:26:42.000Z",
          "wordCount": 4292,
          "title": "Reverse Searching Netflix’s Federated Graph",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:1200/1*GCZRoNqT8seObcUFzYthXg.png"
        },
        {
          "id": "https://medium.com/p/da6805341642",
          "author": "Netflix Technology Blog",
          "description": "Michael Lindon, Chris Sanden, Vache Shirikian, Yanjun Liu, Minal Mishra, Martin Tingley",
          "link": "https://netflixtechblog.com/sequential-testing-keeps-the-world-streaming-netflix-part-2-counting-processes-da6805341642?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-03-18T12:46:46.000Z",
          "wordCount": 3862,
          "title": "Sequential Testing Keeps the World Streaming Netflix Part 2: Counting Processes",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:1024/1*7DNyGA0x7r7msS7w1Zpvpw.jpeg"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": []
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2024/03/22/basic-things.html",
          "author": null,
          "description": "After working on the initial stages of several largish projects, I accumulated a list of things that\nshare the following three properties:",
          "link": "https://matklad.github.io/2024/03/22/basic-things.html",
          "publishedOn": "2024-03-22T00:00:00.000Z",
          "wordCount": 3904,
          "title": "Basic Things",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/03/21/defer-patterns.html",
          "author": null,
          "description": "A short note about some unexpected usages of Zig's defer statement.",
          "link": "https://matklad.github.io/2024/03/21/defer-patterns.html",
          "publishedOn": "2024-03-21T00:00:00.000Z",
          "wordCount": 825,
          "title": "Zig defer Patterns",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": []
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": [
        {
          "id": "https://abhinavsarkar.net/posts/compiling-aoc23-aplenty/?mtm_campaign=feed",
          "author": null,
          "description": "<p>Every year I try to solve some problems from the <a href=\"https://adventofcode.com\" target=\"_blank\" rel=\"noopener\">Advent of Code</a> (AoC) competition in a <a href=\"https://abhinavsarkar.net/posts/type-level-haskell-aoc7/\" target=\"_blank\" rel=\"noopener\">not</a> <a href=\"https://notes.abhinavsarkar.net/2022/type-level-rps\" target=\"_blank\" rel=\"noopener\">straightforward</a> <a href=\"https://notes.abhinavsarkar.net/2022/aoc-7\" target=\"_blank\" rel=\"noopener\">way</a>. Let’s solve the part one of the day 19 problem <a href=\"https://adventofcode.com/2023/day/19\" target=\"_blank\" rel=\"noopener\">Aplenty</a> by compiling the problem input to an executable file.</p>",
          "link": "https://abhinavsarkar.net/posts/compiling-aoc23-aplenty/?mtm_campaign=feed",
          "publishedOn": "2024-04-07T00:00:00.000Z",
          "wordCount": 4725,
          "title": "Solving Advent of Code ’23 “Aplenty” by Compiling",
          "imageUrl": "https://abhinavsarkar.net/images/compiling-aoc23-aplenty/preview.png"
        }
      ]
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=21254",
          "author": "Daniel Lemire",
          "description": "Our computer hardware exchange data using a standard called PCI Express. Your disk, your network and your GPU are limited by what PCI Express can do. Currently, it means that you are limited to a few gigabytes per second of bandwidth. PCI Express is about to receive a big performance boost in 2025 when PCI … Continue reading Science and Technology links (April 13 2024)",
          "link": "https://lemire.me/blog/2024/04/13/science-and-technology-links-april-13-2024/",
          "publishedOn": "2024-04-13T22:31:25.000Z",
          "wordCount": 3032,
          "title": "Science and Technology links (April 13 2024)",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21250",
          "author": "Daniel Lemire",
          "description": "We sometimes need to find the greatest common divisor between two integers in software. The fastest way to compute the greatest common divisor might be the binary Euclidean algorithm. In C++20, it can be implemented generically as follows: template <typename int_type> int_type binary_gcd(int_type u, int_type v) { if (u == 0) { return v; } … Continue reading Greatest common divisor,  the extended Euclidean algorithm, and speed!",
          "link": "https://lemire.me/blog/2024/04/13/greatest-common-divisor-the-extended-euclidean-algorithm-and-speed/",
          "publishedOn": "2024-04-13T20:56:11.000Z",
          "wordCount": 3395,
          "title": "Greatest common divisor,  the extended Euclidean algorithm, and speed!",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21244",
          "author": "Daniel Lemire",
          "description": "A reader asked me for some help in computing (1 – sqrt(0.5)) to an arbitrary precision, from scratch. A simpler but equivalent problem is to compute the square root of an integer (e.g., 2). There are many sophisticated algorithms for such problems, but we want something relatively simple. We’d like to compute the square root … Continue reading A simple algorithm to compute the square root of an integer, byte by byte",
          "link": "https://lemire.me/blog/2024/04/11/a-simple-algorithm-to-compute-the-square-root-of-an-integer-byte-by-byte/",
          "publishedOn": "2024-04-11T19:39:11.000Z",
          "wordCount": 3027,
          "title": "A simple algorithm to compute the square root of an integer, byte by byte",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21209",
          "author": "Daniel Lemire",
          "description": "Last year, I looked at writing small “hello world” web applications in various programming languages (Go, JavaScript, Nim…). Go, using nothing but the standard library, did well. In these benchmarks, I am just programming an HTTP route that returns a small string (e.g., ‘hello world’). The query is from the host itself. The intent behind … Continue reading C++ web app with Crow: early scalability results",
          "link": "https://lemire.me/blog/2024/04/06/c-web-app-with-crow-early-scalability-results/",
          "publishedOn": "2024-04-06T22:01:26.000Z",
          "wordCount": 4533,
          "title": "C++ web app with Crow: early scalability results",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21191",
          "author": "Daniel Lemire",
          "description": "Large language models (e.g., ChatGPT) do better at legal questions than lawyers: Our empirical analysis benchmarks LLMs against a ground truth set by Senior Lawyers, uncovering that advanced models match or exceed human accuracy in determining legal issues (Martin et al.). Gene therapy-mediated partial reprogramming extends lifespan and reverses age-related changes in aged mice. Increased … Continue reading Science and Technology links (March 31 2024)",
          "link": "https://lemire.me/blog/2024/03/31/science-and-technology-links-march-31-2024/",
          "publishedOn": "2024-03-31T21:24:30.000Z",
          "wordCount": 3659,
          "title": "Science and Technology links (March 31 2024)",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21187",
          "author": "Daniel Lemire",
          "description": "Sometimes you need to filter out or filter in data quickly. Suppose that your employer maintains a list of forbidden passwords or URLs or words. You may store them in a relational database and query them as needed. Unfortunately, this process can be slow and inefficient. A better approach might be to use a probabilistic … Continue reading Fast and concise probabilistic filters in Python",
          "link": "https://lemire.me/blog/2024/03/31/fast-and-concise-probabilistic-filters-in-python/",
          "publishedOn": "2024-03-31T18:00:55.000Z",
          "wordCount": 3334,
          "title": "Fast and concise probabilistic filters in Python",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21179",
          "author": "Daniel Lemire",
          "description": "In modern C++, as in many popular languages, you can create ‘lambdas’. Effectively, they are potentially anonymous function instances that you can create on the fly as you are programming, possibly inside another function. The following is a simple example. auto return1 = [](int n) -> int { return 1; }; What about recursive functions? … Continue reading Passing recursive C++ lambdas as function pointers",
          "link": "https://lemire.me/blog/2024/03/22/passing-recursive-c-lambdas-as-function-pointers/",
          "publishedOn": "2024-03-22T15:14:36.000Z",
          "wordCount": 3323,
          "title": "Passing recursive C++ lambdas as function pointers",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21167",
          "author": "Daniel Lemire",
          "description": "When programming software, we are working over an abstraction over a system. The computer hardware may not know about your functions, your variables, and your data. It may only see bits and instructions. Yet to write efficient software, the programmer needs to be aware of the characteristics of the underlying system. Thankfully, we can also … Continue reading Measuring your system’s performance using software  (Go edition)",
          "link": "https://lemire.me/blog/2024/03/17/measuring-your-systems-performance-using-software-go-edition/",
          "publishedOn": "2024-03-17T21:24:01.000Z",
          "wordCount": 10630,
          "title": "Measuring your system’s performance using software  (Go edition)",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": []
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}