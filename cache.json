{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/12/20/",
          "author": null,
          "description": "GCC and Clang inline assembly is an interface between high and low level\nprogramming languages. It is subtle and treacherous. Many are ensnared in\nits traps, usually unknowingly. As such, the asm keyword is essentially\nthe unsafe keyword of C and C++. Nearly every inline assembly tutorial,\nincluding the awful ibilio page at the top of search engines for\ndecades, propagate fundamental, serious mistakes, and most examples are\nincorrect. The dangerous part is that the examples usually produce the\nexpected results! The situation is dire. This article isn’t a tutorial,\nbut basic rules to avoid the most common mistakes, or to spot them in code\nreview.\nThe focus is entirely extended assembly, and not basic assembly,\nwhich has different rules. The former is any inline assembly statement\nwith const…",
          "link": "https://nullprogram.com/blog/2024/12/20/",
          "publishedOn": "2024-12-20T19:46:48.000Z",
          "wordCount": 1150,
          "title": "Rules to avoid common extended inline assembly mistakes",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/d2fb8e9ba1c6",
          "author": "Netflix Technology Blog",
          "description": "David J. Berg*, David Casler^, Romain Cledat*, Qian Huang*, Rui Lin*, Nissan Pow*, Nurcan Sonmez*, Shashank Srikanth*, Chaoying Wang*…",
          "link": "https://netflixtechblog.com/introducing-configurable-metaflow-d2fb8e9ba1c6?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-20T07:11:37.000Z",
          "wordCount": 6583,
          "title": "Introducing Configurable Metaflow",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:1143/1*XrOVl25ZLx8_4nHLRxNgDg.png"
        },
        {
          "id": "https://medium.com/p/d761cfd551ee",
          "author": "Netflix Technology Blog",
          "description": "This article is the first in a multi-part series sharing a breadth of Analytics Engineering work at Netflix, recently presented as part of…",
          "link": "https://netflixtechblog.com/part-1-a-survey-of-analytics-engineering-work-at-netflix-d761cfd551ee?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-17T23:26:37.000Z",
          "wordCount": 3797,
          "title": "Part 1: A Survey of Analytics Engineering Work at Netflix",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:625/0*gUgNHuu6yqKdfbgg"
        },
        {
          "id": "https://medium.com/p/f2a142955f83",
          "author": "Netflix Technology Blog",
          "description": "By J Han, Pallavi Phadnis",
          "link": "https://netflixtechblog.com/cloud-efficiency-at-netflix-f2a142955f83?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-17T22:17:29.000Z",
          "wordCount": 2803,
          "title": "Cloud Efficiency at Netflix",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1200/0*vDQJiJUttlRSpVBo"
        },
        {
          "id": "https://medium.com/p/c88c586629eb",
          "author": "Netflix Technology Blog",
          "description": "",
          "link": "https://netflixtechblog.com/title-launch-observability-at-netflix-scale-c88c586629eb?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-12-17T21:54:37.000Z",
          "wordCount": null,
          "title": "Title Launch Observability at Netflix Scale",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": [
        {
          "id": "https://nim-lang.org//blog/2024/12/09/community-survey-2024.html",
          "author": null,
          "description": "We are proud to announce the launch of the official\n2024 Nim Community Survey!\nNo matter whether you use Nim today, have used Nim previously, or never used Nim before;\nwe want to know your opinions.\nYour feedback will help the Nim project understand its strengths and\nweaknesses, and to determine development priorities for the future.\nIt shouldn’t take you much longer than 5 minutes to complete this survey.\nSubmissions will be accepted until the start of 2025, depending on the\nresponse rates.\nIf you have any questions or feedback, please don’t hesitate\nto get in touch with us via email at survey@nim-lang.org or on the\nNim Forum.\nThis is now the eight year in which this survey has been running.\nAn analysis of the results for the past years can be found at the following links:\n2016\n2017\n2018\n2019\n2020\n2021\n2023\nWe would appreciate your help in spreading the word about this survey.\nShare the Google Forms link on your social network feeds, with your colleagues\nand in other communities.\nOnce the submission period ends, the results will be shown here and publicized\nvia the Nim Forum.\nThanks for your time!",
          "link": "https://nim-lang.org//blog/2024/12/09/community-survey-2024.html",
          "publishedOn": "2024-12-09T00:00:00.000Z",
          "wordCount": 346,
          "title": "Launching the 2024 Nim Community Survey",
          "imageUrl": "https://nim-lang.org/assets/img/twitter_banner.png"
        }
      ]
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2024/12/13/majjit-lsp.html",
          "author": null,
          "description": "An out-there suggestion for the nascent jj ecosystem!",
          "link": "https://matklad.github.io/2024/12/13/majjit-lsp.html",
          "publishedOn": "2024-12-13T00:00:00.000Z",
          "wordCount": 1475,
          "title": "Majjit LSP",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/11/23/semver-is-not-about-you.html",
          "author": null,
          "description": "A popular genre of articles for the past few year has been a SemVer Critique, pointing out various\nthings that are wrong with SemVer itself, or with the way SemVer is being applied, and, customarily,\nsuggesting an alternative versioning scheme. Usually, the focus is either on how SemVer ought to be\nused, by library authors (nitpicking the definition of a breaking change), or on how SemVer is (not)\nuseful for a library consumer (nitpicking the definition of a breaking change).",
          "link": "https://matklad.github.io/2024/11/23/semver-is-not-about-you.html",
          "publishedOn": "2024-11-23T00:00:00.000Z",
          "wordCount": 1508,
          "title": "SemVer Is Not About You",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": [
        {
          "id": "https://samwho.dev/turing-machines/",
          "author": null,
          "description": "body {\n    text-wrap: pretty;\n  }\n\n  @media (prefers-reduced-motion: reduce) {\n    * {\n      transition: none;\n      animation: none;\n    }\n  }\n\n  turing-machine {\n    width: 100%;\n    display: block;\n    position: relative;\n    padding-bottom: 1em;\n  }\n\n  turing-machine .program-container {\n    position: relative;\n    display: flex;\n    justify-content: center;\n  }\n\n  turing-machine table {\n    border: none;\n    font-family: Fira Code;\n    border-collapse: collapse;\n    border-spacing: 0;\n    margin: 1px;\n    margin-top: 0.5em;\n    width: auto;\n  }\n\n  turing-machine thead td {\n    text-align: center;\n  }\n\n  turing-machine td {\n    text-align: left;\n    padding-left: 3vw;\n    padding-right: 3vw;\n    padding-top: 0.2em;\n    padding-bottom: 0.2em;\n    border: 1px dashed #bbbbbb;\n  }\n\n  turin…",
          "link": "https://samwho.dev/turing-machines/",
          "publishedOn": "2024-12-20T00:00:00.000Z",
          "wordCount": 4371,
          "title": "Turing Machines",
          "imageUrl": "https://samwho.dev/images/turing-machines-og.png?h=6567026e8884fb88a389"
        }
      ]
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": []
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=21789",
          "author": "Daniel Lemire",
          "description": "Parsing text files is often confusing irrespective of your programming language. It can also be surprising slow. As an example, let us consider the following problem. You have a comma-separated-value file. It is a text file made of several lines and each line is separated into fields by a comma. Excel spreadsheets are often exported … Continue reading Simpler and faster parsing code with std::views::split",
          "link": "https://lemire.me/blog/2024/12/21/simpler-and-faster-parsing-code-with-stdviewssplit/",
          "publishedOn": "2024-12-21T21:35:13.000Z",
          "wordCount": 3183,
          "title": "Simpler and faster parsing code with std::views::split",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21776",
          "author": "Daniel Lemire",
          "description": "In C++, it might be reasonable to represent a URL using a class or a struct made of several strings, like so: struct basic { std::string protocol; std::string username; std::string password; std::string hostname; std::string port; std::string pathname; std::string search; std::string hash; }; To associate each component with an index, we can use an enum class: … Continue reading Accessing the attributes of a struct in C++ as array elements?",
          "link": "https://lemire.me/blog/2024/12/16/accessing-the-attributes-of-a-struct-in-c-as-array-elements/",
          "publishedOn": "2024-12-16T00:55:17.000Z",
          "wordCount": 3369,
          "title": "Accessing the attributes of a struct in C++ as array elements?",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21773",
          "author": "Daniel Lemire",
          "description": "A data structure in programming is a specific way of organizing and storing data in a computer so that it can be accessed and used efficiently. In woodworking or metalworking, a jig holds a piece of work and guides the tools operating on it. It helps to produce consistent results. The simplest jig is probably … Continue reading Data structures as jigs for programmers (Go edition)",
          "link": "https://lemire.me/blog/2024/12/08/data-structures-as-jigs-for-programmers-go-edition/",
          "publishedOn": "2024-12-08T21:04:01.000Z",
          "wordCount": 7062,
          "title": "Data structures as jigs for programmers (Go edition)",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": []
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}