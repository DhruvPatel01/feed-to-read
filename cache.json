{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2024/09/04/",
          "author": null,
          "description": "Suppose you’re working in C using one of the major toolchains — that is,\nit’s mainly a C++ implementation — and you need regular expressions. You\ncould integrate a library, but there’s a regex implementation in the C++\nstandard library included with your compiler, just within reach. As a\nresourceful engineer, using an asset already in hand seems prudent. But\nit’s a C++ interface, and you’re using C instead of C++ for a reason,\nperhaps to avoid dealing with C++. Have no worries. This article is\nabout wrapping std::regex in a tidy C interface which not only\nhides all the C++ machinery, but utterly tames it. It’s not so much\npractical as a potpourri of interesting techniques.\nIf you’d like to skip ahead, here’s the full source up front. Tested with\nw64devkit, MSVC cl, and clang-cl: scratch/re…",
          "link": "https://nullprogram.com/blog/2024/09/04/",
          "publishedOn": "2024-09-04T17:15:07.000Z",
          "wordCount": 1609,
          "title": "Giving C++ std::regex a C makeover",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/1ea8a0a11b30",
          "author": "Netflix Technology Blog",
          "description": "Vidhya Arvind, Rajasekhar Ummadisetty, Joey Lynch, Vinay Chella",
          "link": "https://netflixtechblog.com/introducing-netflixs-key-value-data-abstraction-layer-1ea8a0a11b30?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-09-18T22:49:04.000Z",
          "wordCount": 6628,
          "title": "Introducing Netflix’s Key-Value Data Abstraction Layer",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:755/0*9Ny8Uc-diSDnVGnk"
        },
        {
          "id": "https://medium.com/p/b468bc0ff658",
          "author": "Netflix Technology Blog",
          "description": "Pushy is Netflix’s WebSocket server that maintains persistent WebSocket connections with devices running the Netflix application. This…",
          "link": "https://netflixtechblog.com/pushy-to-the-limit-evolving-netflixs-websocket-proxy-for-the-future-b468bc0ff658?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-09-10T19:15:34.000Z",
          "wordCount": 8831,
          "title": "Pushy to the Limit: Evolving Netflix’s WebSocket proxy for the future",
          "imageUrl": "https://miro.medium.com/v2/da:true/resize:fit:1048/0*WQ1W30ChfWrEmmR5"
        },
        {
          "id": "https://medium.com/p/64b1f4b3bbdd",
          "author": "Netflix Technology Blog",
          "description": "By Jose Fernandez, Sebastien Dabdoub, Jason Koch, Artem Tkachuk",
          "link": "https://netflixtechblog.com/noisy-neighbor-detection-with-ebpf-64b1f4b3bbdd?source=rss----2615bd06b42e---4",
          "publishedOn": "2024-09-10T18:00:21.000Z",
          "wordCount": 4389,
          "title": "Noisy Neighbor Detection with eBPF",
          "imageUrl": "https://miro.medium.com/v2/resize:fill:1200:632/g:fp:0.48:0.5/1*6bapyclfXZPsUIaXFM-xaQ.png"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": []
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2024/09/24/watermelon-operator.html",
          "author": null,
          "description": "In these two most excellent articles,\nhttps://without.boats/blog/let-futures-be-futures\nand\nhttps://without.boats/blog/futures-unordered, \nwithoutboats introduces the concepts of multi-task and intra-task concurrency.\nI want to revisit this distinction --- while I agree that there are different classes\nof patterns of concurrency here, I am not quite satisfied with this specific partitioning of the\ndesign space. I will use Rust-like syntax for most of the examples, but I am more interested in the\nlanguage-agnostic patterns, rather than in Rust's specific implementation of async.",
          "link": "https://matklad.github.io/2024/09/24/watermelon-operator.html",
          "publishedOn": "2024-09-24T00:00:00.000Z",
          "wordCount": 4013,
          "title": "The Watermelon Operator",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/09/23/what-is-io-uring.html",
          "author": null,
          "description": "An attempt at concise explanation of what io_uring is.",
          "link": "https://matklad.github.io/2024/09/23/what-is-io-uring.html",
          "publishedOn": "2024-09-23T00:00:00.000Z",
          "wordCount": 418,
          "title": "What is io_uring?",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/09/06/fix-one-level-deeper.html",
          "author": null,
          "description": "I had a productive day today! I did many different and unrelated things, but they all had the same\nunifying theme:",
          "link": "https://matklad.github.io/2024/09/06/fix-one-level-deeper.html",
          "publishedOn": "2024-09-06T00:00:00.000Z",
          "wordCount": 766,
          "title": "Try to Fix It One Level Deeper",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2024/09/03/the-fundamental-law-of-dependencies.html",
          "author": null,
          "description": "Canonical source code for software should include checksums of the content of all its\ndependencies.",
          "link": "https://matklad.github.io/2024/09/03/the-fundamental-law-of-dependencies.html",
          "publishedOn": "2024-09-03T00:00:00.000Z",
          "wordCount": 642,
          "title": "The Fundamental Law Of Software Dependencies",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": []
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": []
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=21694",
          "author": "Daniel Lemire",
          "description": "Recently, I received an email from an engineer at a prominent company who shared how he managed to save his employer tens of thousands of dollars annually by developing a custom command-line utility in C++. Without delving into specifics (which remain confidential), the company’s servers were tasked with querying a JSON file for a specific … Continue reading It is never too late to write your own C/C++ command-line utilities",
          "link": "https://lemire.me/blog/2024/09/28/it-is-never-too-later-to-write-your-own-c-c-command-line-utilities/",
          "publishedOn": "2024-09-28T04:06:18.000Z",
          "wordCount": 3065,
          "title": "It is never too late to write your own C/C++ command-line utilities",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21688",
          "author": "Daniel Lemire",
          "description": "Imagine a world where becoming a doctor isn’t about years of rigorous study, but about showcasing your life’s work. That’s how doctorates used to roll. You’d write a book, make a groundbreaking discovery, and voila, a doctorate was yours. Fast forward to today, and we’ve flipped the script. Now, a PhD is less about what … Continue reading The PhD Paradox: A Journey into Academia’s Upside-Down World",
          "link": "https://lemire.me/blog/2024/09/11/the-phd-paradox-a-journey-into-academias-upside-down-world/",
          "publishedOn": "2024-09-11T20:33:28.000Z",
          "wordCount": 3438,
          "title": "The PhD Paradox: A Journey into Academia’s Upside-Down World",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21677",
          "author": "Daniel Lemire",
          "description": "C++ programmers tend to represent strings using the std::string class. Though the implementation might vary, each instance of an std::string might use 32 bytes. Though it is not a large amount of memory, it can add up. In the Node.js runtime, as part of the build tools, there is a function which precomputes the string … Continue reading Replace strings by views when you can",
          "link": "https://lemire.me/blog/2024/09/09/replace-stdstring-by-stdstring_view-when-you-can/",
          "publishedOn": "2024-09-09T20:26:36.000Z",
          "wordCount": 4186,
          "title": "Replace strings by views when you can",
          "imageUrl": null
        },
        {
          "id": "https://lemire.me/blog/?p=21588",
          "author": "Daniel Lemire",
          "description": "We sometimes have to work a large quantity of floating-point numbers. This volume can be detrimental to performance. Thus we often want to compress these numbers. Large-language models routinely do so. A sensible approach is to convert them to brain floating point numbers. These are 16-bit numbers that are often capable of representing accurately a … Continue reading Compressing floating-point numbers quickly by converting them to brain floats",
          "link": "https://lemire.me/blog/2024/09/02/compressing-floating-point-numbers-quickly-by-converting-them-to-brain-floats/",
          "publishedOn": "2024-09-02T22:52:28.000Z",
          "wordCount": 3397,
          "title": "Compressing floating-point numbers quickly by converting them to brain floats",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": []
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}