{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2023/02/11/",
          "author": null,
          "description": "In general, when working in C I avoid the standard library, libc, as much\nas possible. If possible I won’t even link it. For people not used to\nworking and thinking this way, the typical response is confusion. Isn’t\nthat like re-inventing the wheel? For me, libc is a wheel barely worth\nusing — too many deficiencies in both interface and implementation.\nFortunately, it’s easy to build a better, simpler wheel when you know the\nterrain ahead of time. In this article I’ll review the functions and\nfunction-like macros of the C standard library and discuss practical\nissues I’ve faced with them.\nFortunately the flexibility of C-in-practice makes up for the standard\nlibrary. I already have all the tools at hand to do what I need — not\nbeholden to any runtime.\nHow does one write portable software w…",
          "link": "https://nullprogram.com/blog/2023/02/11/",
          "publishedOn": "2023-02-11T03:04:11.000Z",
          "wordCount": 3050,
          "title": "My review of the C standard library in practice",
          "imageUrl": null
        },
        {
          "id": "https://nullprogram.com/blog/2023/01/18/",
          "author": null,
          "description": "This article was discussed on Hacker News.\nIn my common SDL2 mistakes listing, the first was about winging it\ninstead of using the sdl2-config script. It’s just one of three official\noptions for portably configuring SDL2, but I had dismissed the others from\nconsideration. One is the pkg-config facility common to unix-like\nsystems. However, the SDL maintainers recently announced SDL3, which will\nnot have a sdl3-config. The concept has been deprecated in favor of the\nexisting pkg-config option. I’d like to support this on w64devkit, except\nthat it lacks pkg-config — not the first time this has come up. So last\nweekend I wrote a new pkg-config from scratch with first-class Windows\nsupport: u-config (“micro-config”). It will serve as pkg-config\nin w64devkit starting in the next release.\nUltima…",
          "link": "https://nullprogram.com/blog/2023/01/18/",
          "publishedOn": "2023-01-18T06:39:51.000Z",
          "wordCount": 3010,
          "title": "u-config: a new, lean pkg-config clone",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Max Slater",
      "feedUrl": "https://thenumb.at/feed.xml",
      "siteUrl": "https://thenumbat.github.io/",
      "articles": []
    },
    {
      "title": "Dennis Yurichev's blog",
      "feedUrl": "https://yurichev.com/blog/rss.xml",
      "siteUrl": "https://yurichev.org/",
      "articles": [
        {
          "id": "https://yurichev.org/py_continue/",
          "author": null,
          "description": "[Python][C][C++][For noobs] What is 'continue'",
          "link": "https://yurichev.org/py_continue/",
          "publishedOn": "2023-01-29T00:00:00.000Z",
          "wordCount": 386,
          "title": "[Python][C][C++][For noobs] What is 'continue'",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/py_serial/",
          "author": null,
          "description": "[Python] Simplest possible serialization/marshalling",
          "link": "https://yurichev.org/py_serial/",
          "publishedOn": "2023-01-28T00:00:00.000Z",
          "wordCount": 212,
          "title": "[Python] Simplest possible serialization/marshalling",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/glitch/",
          "author": null,
          "description": "Public transport glitch. Dedicated to all fans of John Conway's Game of Life. Seen in Kiev.",
          "link": "https://yurichev.org/glitch/",
          "publishedOn": "2023-01-27T00:00:00.000Z",
          "wordCount": 176,
          "title": "Public transport glitch. Dedicated to all fans of John Conway's Game of Life. Seen in Kiev.",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/mysql/",
          "author": null,
          "description": "Weak data typing in MySQL",
          "link": "https://yurichev.org/mysql/",
          "publishedOn": "2023-01-26T00:00:00.000Z",
          "wordCount": 244,
          "title": "Weak data typing in MySQL",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/side/",
          "author": null,
          "description": "[Russian][Crypto] Что такое side-channel attack / timing attack",
          "link": "https://yurichev.org/side/",
          "publishedOn": "2023-01-26T00:00:00.000Z",
          "wordCount": 671,
          "title": "[Russian][Crypto] Что такое side-channel attack / timing attack",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/Bleich4/",
          "author": null,
          "description": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part IV",
          "link": "https://yurichev.org/Bleich4/",
          "publishedOn": "2023-01-23T00:00:00.000Z",
          "wordCount": 412,
          "title": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part IV",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/Bleich3/",
          "author": null,
          "description": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part III",
          "link": "https://yurichev.org/Bleich3/",
          "publishedOn": "2023-01-23T00:00:00.000Z",
          "wordCount": 820,
          "title": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part III",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/Bleich2/",
          "author": null,
          "description": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part II",
          "link": "https://yurichev.org/Bleich2/",
          "publishedOn": "2023-01-23T00:00:00.000Z",
          "wordCount": 1055,
          "title": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part II",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/Bleich1/",
          "author": null,
          "description": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part I",
          "link": "https://yurichev.org/Bleich1/",
          "publishedOn": "2023-01-23T00:00:00.000Z",
          "wordCount": 1028,
          "title": "[Crypto][Python] D.Bleichenbacher attack on RSA PKCS#1, part I",
          "imageUrl": null
        },
        {
          "id": "https://yurichev.org/RSA_blind/",
          "author": null,
          "description": "[Crypto] RSA blinding",
          "link": "https://yurichev.org/RSA_blind/",
          "publishedOn": "2023-01-22T00:00:00.000Z",
          "wordCount": 337,
          "title": "[Crypto] RSA blinding",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "fasterthanli.me",
      "feedUrl": "https://fasterthanli.me/index.xml",
      "siteUrl": "https://fasterthanli.me",
      "articles": [
        {
          "id": "https://fasterthanli.me/videos/cpp-vs-rust-which-is-faster",
          "author": null,
          "description": "<p>I ported some Advent of Code solutions from C/C++ to Rust, and used the\nopportunity to compare performance. When I couldn't explain why they performed\ndifferently, I had no choice but to disassemble both and look at what the\ncodegen was like!</p>",
          "link": "https://fasterthanli.me/videos/cpp-vs-rust-which-is-faster",
          "publishedOn": "2023-01-17T08:00:00.000Z",
          "wordCount": 999,
          "title": "C++ vs Rust: which is faster?",
          "imageUrl": "https://tube.fasterthanli.me/covers/cpp-vs-rust/cover.jpg"
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/295e4d788db5",
          "author": "Netflix Technology Blog",
          "description": "By Grace Tang, Aneesh Vartakavi, Julija Bagdonaite, Cristina Segalin, and Vi Iyengar",
          "link": "https://netflixtechblog.com/discovering-creative-insights-in-promotional-artwork-295e4d788db5?source=rss----2615bd06b42e---4",
          "publishedOn": "2023-01-30T16:16:03.000Z",
          "wordCount": 4707,
          "title": "Discovering Creative Insights in Promotional Artwork",
          "imageUrl": "https://miro.medium.com/max/664/1*Y9kntVhxsTY0PoQEcQ4yIQ.png"
        },
        {
          "id": "https://medium.com/p/f5ba9266d428",
          "author": "Netflix Technology Blog",
          "description": "In Marken (Scalable Annotation Service at Netflix), an annotation is a piece of metadata which can be attached to an object from any domain.",
          "link": "https://netflixtechblog.com/scalable-annotation-service-marken-f5ba9266d428?source=rss----2615bd06b42e---4",
          "publishedOn": "2023-01-26T03:07:29.000Z",
          "wordCount": 5855,
          "title": "Scalable Annotation Service — Marken",
          "imageUrl": "https://miro.medium.com/max/1200/1*5eyi33Txa5kOKuyMmrpPGA.jpeg"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2023/02/10/how-a-zig-ide-could-work.html",
          "author": null,
          "description": "Zig is a very interesting language from an IDE point of view.\nSome aspects of it are friendly to IDEs, like a very minimal and simple-to-parse syntax\n(Zig can even be correctly lexed line-by-line, very cool!),\nthe absence of syntactic macros, and ability to do a great deal of semantic analysis on a file-by-file basis, in parallel.\nOn the other hand, comptime.\nI accidentally spent some time yesterday thinking about how to build an IDE for that, this post is a result.",
          "link": "https://matklad.github.io/2023/02/10/how-a-zig-ide-could-work.html",
          "publishedOn": "2023-02-10T00:00:00.000Z",
          "wordCount": 2027,
          "title": "How a Zig IDE Could Work",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2023/01/26/rusts-ugly-syntax.html",
          "author": null,
          "description": "People complain about Rust syntax.\nI think that most of the time when people think they have an issue with Rust's syntax, they actually object to Rust's semantics.\nIn this slightly whimsical post, I'll try to disentangle the two.",
          "link": "https://matklad.github.io/2023/01/26/rusts-ugly-syntax.html",
          "publishedOn": "2023-01-26T00:00:00.000Z",
          "wordCount": 1141,
          "title": "Rust's Ugly Syntax",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2023/01/25/next-rust-compiler.html",
          "author": null,
          "description": "In Rust in 2023, @nrc floated an idea of a Rust compiler rewrite.\nAs my hobby is writing Rust compiler frontends (1, 2), I have some (but not very many) thoughts here!\nThe post consists of two parts, covering organizational and technical aspects.",
          "link": "https://matklad.github.io/2023/01/25/next-rust-compiler.html",
          "publishedOn": "2023-01-25T00:00:00.000Z",
          "wordCount": 1296,
          "title": "Next Rust Compiler",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}