{
  "sources": [
    {
      "title": "null program",
      "feedUrl": "https://nullprogram.com/feed/",
      "siteUrl": "https://nullprogram.com",
      "articles": [
        {
          "id": "https://nullprogram.com/blog/2023/08/27/",
          "author": null,
          "description": "For the typical DLL function call you declare the function prototype (via\nheader file), you inform the link editor (ld, link) that the DLL\nexports a symbol with that name (import library), it matches the declared\nname with this export, and it becomes an import in your program’s import\ntable. What happens when two different DLLs export the same symbol? The\nlink editor will pick the first found. But what if you want to use both\nexports? If they have the same name, how could program or link editor\ndistinguish them? In this article I’ll demonstrate a technique to resolve\nthis by creating a program which links with and directly uses two\ndifferent C runtimes (CRTs) simultaneously.\nIn PE executable images, an import isn’t just a symbol, but a tuple\nof DLL name and symbol. For human display, a tup…",
          "link": "https://nullprogram.com/blog/2023/08/27/",
          "publishedOn": "2023-08-27T01:46:31.000Z",
          "wordCount": 1103,
          "title": "How to link identical function names from different DLLs",
          "imageUrl": null
        },
        {
          "id": "https://nullprogram.com/blog/2023/08/23/",
          "author": null,
          "description": "In an effort to avoid programming by superstition, I did a deep dive\ninto the Win32 “environment block,” the data structure holding a process’s\nenvironment variables, in order to better understand it. Along the way I\ndiscovered implied and undocumented behaviors. (The environment block\nmust not to be confused with the Process Environment Block (PEB)\nwhich is different.) Because I cannot possibly retain all the quirky\ndetails in my head for long, I’m writing them down for future reference. I\nran my tests on different Windows versions as far back as Windows XP SP3\nin order to fill in gaps where documentation is ambiguous, incomplete, or\nwrong. Overall conclusion: Correct, direct manipulation of an environment\nblock is impossible in the general case due to under-specified and\nincorrect docume…",
          "link": "https://nullprogram.com/blog/2023/08/23/",
          "publishedOn": "2023-08-23T21:51:10.000Z",
          "wordCount": 1714,
          "title": "Everything you never wanted to know about Win32 environment blocks",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Max Slater",
      "feedUrl": "https://thenumb.at/feed.xml",
      "siteUrl": "https://thenumb.at/",
      "articles": [
        {
          "id": "https://thenumb.at/NYBG/",
          "author": null,
          "description": "New York Botanical Garden, New York, NY, 2023",
          "link": "https://thenumb.at/NYBG/",
          "publishedOn": "2023-08-15T00:00:00.000Z",
          "wordCount": 53,
          "title": "NYC: Botanical Garden",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Netflix TechBlog - Medium",
      "feedUrl": "https://netflixtechblog.com/feed",
      "siteUrl": "https://netflixtechblog.com?source=rss----2615bd06b42e---4",
      "articles": [
        {
          "id": "https://medium.com/p/ac6483b52a51",
          "author": "Netflix Technology Blog",
          "description": "Netflix’s service mesh adoption: history, motivations, and how we worked with the Envoy community on a feature to streamline mesh adoption",
          "link": "https://netflixtechblog.com/zero-configuration-service-mesh-with-on-demand-cluster-discovery-ac6483b52a51?source=rss----2615bd06b42e---4",
          "publishedOn": "2023-08-29T23:08:45.000Z",
          "wordCount": 5774,
          "title": "Zero Configuration Service Mesh with On-Demand Cluster Discovery",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:1000/0*xr1EBhghfcC8j4Uj"
        },
        {
          "id": "https://medium.com/p/b8cd145491cc",
          "author": "Netflix Technology Blog",
          "description": "By: Hamid Shahid, Laura Johnson, Tiffany Low",
          "link": "https://netflixtechblog.com/ava-discovery-view-surfacing-authentic-moments-b8cd145491cc?source=rss----2615bd06b42e---4",
          "publishedOn": "2023-08-17T22:07:14.000Z",
          "wordCount": 5834,
          "title": "AVA Discovery View: Surfacing Authentic Moments",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:890/0*o3U-Eg_XXmXzmMMO"
        },
        {
          "id": "https://medium.com/p/2feb273a3598",
          "author": "Netflix Technology Blog",
          "description": "Netflix’s Zuul Gateway eliminated tens of millions of connections and reduced almost all connection churn to backends",
          "link": "https://netflixtechblog.com/curbing-connection-churn-in-zuul-2feb273a3598?source=rss----2615bd06b42e---4",
          "publishedOn": "2023-08-16T17:55:48.000Z",
          "wordCount": 5884,
          "title": "Curbing Connection Churn in Zuul",
          "imageUrl": "https://miro.medium.com/v2/resize:fit:734/0*lL_0weS3WX_b4cZC"
        }
      ]
    },
    {
      "title": "Nim Programming Language",
      "feedUrl": "https://nim-lang.org/feed.xml",
      "siteUrl": "https://nim-lang.org//",
      "articles": [
        {
          "id": "https://nim-lang.org//blog/2023/09/01/this-month-with-nim.html",
          "author": null,
          "description": "HappyX\nAuthor: ethosa\nHappyX is a macro-oriented full-stack web framework that combines frontend and backend features.\nWith HappyX you can write single page applications (SPA),\nstatic site generation (SSG),\nand server side rendering (SSR) web applications.\nIt provides the same syntax for all of these solutions:\nimport happyx\n\nserve(\"127.0.0.1\", 5000):\n  \"/\":\n    \"Hello, world!\"\n\nor:\nimport happyx\n\nappRoutes(\"app\"):\n  \"/\":\n    \"Hello, world!\"\n\nIncluded is a command line interface hpx.\nThis enables easy creation of projects for Nim and Python.\nA non exhaustive list of features is as follows:\nMultiple server options (built-in asynchttpserver, microasynchttpserver, httpbeast and httpx)\nHot code reloading (now only for SPA)\nDebug logging with -d:debug\nPowerful routing that includes path params …",
          "link": "https://nim-lang.org//blog/2023/09/01/this-month-with-nim.html",
          "publishedOn": "2023-09-01T00:00:00.000Z",
          "wordCount": 771,
          "title": "This Month with Nim: July and August 2023",
          "imageUrl": "https://nim-lang.org/assets/img/twitter_banner.png"
        }
      ]
    },
    {
      "title": null,
      "feedUrl": "https://ayazhafiz.com/feed-rss2.xml",
      "siteUrl": "https://ayazhafiz.com",
      "articles": []
    },
    {
      "title": "matklad",
      "feedUrl": "https://matklad.github.io/feed.xml",
      "siteUrl": "https://matklad.github.io",
      "articles": [
        {
          "id": "https://matklad.github.io/2023/08/17/typescript-is-surprisingly-ok-for-compilers.html",
          "author": null,
          "description": "There are two main historical trends when choosing an implementation language for something\ncompiler-shaped.",
          "link": "https://matklad.github.io/2023/08/17/typescript-is-surprisingly-ok-for-compilers.html",
          "publishedOn": "2023-08-17T00:00:00.000Z",
          "wordCount": 2346,
          "title": "TypeScript is Surprisingly OK for Compilers",
          "imageUrl": null
        },
        {
          "id": "https://matklad.github.io/2023/08/13/role-of-algorithms.html",
          "author": null,
          "description": "This is lobste.rs comment as an article, so expect even more abysmal editing than usual.",
          "link": "https://matklad.github.io/2023/08/13/role-of-algorithms.html",
          "publishedOn": "2023-08-13T00:00:00.000Z",
          "wordCount": 2399,
          "title": "Role Of Algorithms",
          "imageUrl": null
        }
      ]
    },
    {
      "title": "Hugging Face - Blog",
      "feedUrl": "https://huggingface.co/blog/feed.xml",
      "siteUrl": "https://huggingface.co/blog",
      "articles": []
    },
    {
      "title": "samwho.dev",
      "feedUrl": "https://samwho.dev/rss.xml",
      "siteUrl": "https://samwho.dev/rss.xml",
      "articles": []
    },
    {
      "title": "Posts on abhinavsarkar.net",
      "feedUrl": "https://abhinavsarkar.net/feed.atom",
      "siteUrl": "https://abhinavsarkar.net/feed.atom",
      "articles": []
    },
    {
      "title": "Daniel Lemire's blog",
      "feedUrl": "https://lemire.me/blog/feed/",
      "siteUrl": "https://lemire.me/blog",
      "articles": [
        {
          "id": "https://lemire.me/blog/?p=20798",
          "author": "Daniel Lemire",
          "description": "A common problem in parsing is that you want to find all identifiers (e.g., variable names, function names) in a document quickly. There are typically some fixed rules. For example, it is common to allow ASCII letters and digits as well as characters like ‘_’ in the identifier, but to forbid some characters at the … Continue reading Locating ‘identifiers’ quickly (ARM NEON edition)",
          "link": "https://lemire.me/blog/2023/09/04/locating-identifiers-quickly-arm-neon-edition/",
          "publishedOn": "2023-09-04T00:46:18.000Z",
          "wordCount": 3688,
          "title": "Locating ‘identifiers’ quickly (ARM NEON edition)",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=20790",
          "author": "Daniel Lemire",
          "description": "Physicists have a published a paper with 5154 authors. The list of authors takes 24 pages out of the 33 pages. The lesson is that if someone tell you that they have published an important paper, you should ask how many authors there were and what their exact role was. Vegatarians are at higher risk … Continue reading Science and Technology links (September 2 2023)",
          "link": "https://lemire.me/blog/2023/09/02/science-and-technology-links-september-2-2023/",
          "publishedOn": "2023-09-02T18:30:10.000Z",
          "wordCount": 3727,
          "title": "Science and Technology links (September 2 2023)",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=20758",
          "author": "Daniel Lemire",
          "description": "Though most strings online today follow the Unicode standard (e.g., using UTF-8), the Latin 1 standard is still in widespread inside some systems (such as browsers) as JavaScript strings are often stored as either Latin 1, UTF-8 or UTF-16 internally. Latin 1 captures the first 256 characters from the Unicode standard and represents them as … Continue reading Transcoding Latin 1 strings to UTF-8 strings at 18 GB/s using AVX-512",
          "link": "https://lemire.me/blog/2023/08/18/transcoding-latin-1-strings-to-utf-8-strings-at-12-gb-s-using-avx-512/",
          "publishedOn": "2023-08-18T18:17:42.000Z",
          "wordCount": 4019,
          "title": "Transcoding Latin 1 strings to UTF-8 strings at 18 GB/s using AVX-512",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=20745",
          "author": "Daniel Lemire",
          "description": "Given a set of r random values from a large set (of size N), I have been using the formula 1-exp(-r**2/(2N)) to approximate the probability of a collision. It assumes that r is much smaller than N. The formula suggests that if you have hundreds of millions of random 64-bit numbers, you will start getting … Continue reading How accurate is the birthday’s paradox formula?",
          "link": "https://lemire.me/blog/2023/08/15/how-accurate-is-the-birthdays-paradox-formula/",
          "publishedOn": "2023-08-15T17:28:53.000Z",
          "wordCount": 3230,
          "title": "How accurate is the birthday’s paradox formula?",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        },
        {
          "id": "https://lemire.me/blog/?p=20738",
          "author": "Daniel Lemire",
          "description": "Most strings online are Unicode strings in the UTF-8 format. Other systems (e.g., Java, Microsoft) might prefer UTF-16. However, Latin 1 is still a common encoding (e.g., within JavaScript runtimes). Its relationship with Unicode is simple: Latin 1 includes the first 256 Unicode characters. It is rich enough to convert most of the standard European … Continue reading Transcoding UTF-8 strings to Latin 1 strings at 18 GB/s using AVX-512",
          "link": "https://lemire.me/blog/2023/08/12/transcoding-utf-8-strings-to-latin-1-strings-at-12-gb-s-using-avx-512/",
          "publishedOn": "2023-08-12T01:18:50.000Z",
          "wordCount": 4247,
          "title": "Transcoding UTF-8 strings to Latin 1 strings at 18 GB/s using AVX-512",
          "imageUrl": "https://lemire.me/img/portrait2018facebook.jpg"
        }
      ]
    },
    {
      "title": "devever.net/~hl",
      "feedUrl": "https://www.devever.net/~hl/index.feed",
      "siteUrl": "https://www.devever.net/~hl/",
      "articles": []
    },
    {
      "title": "apenwarr",
      "feedUrl": "https://apenwarr.ca/log/rss.php",
      "siteUrl": "https://apenwarr.ca/log/",
      "articles": []
    }
  ],
  "cliVersion": "1.15.1"
}